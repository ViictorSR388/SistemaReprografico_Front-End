[{"/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/index.js":"1","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/App.js":"2","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/NotAuthorized.js":"3","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/auth.js":"4","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/helpers/AuthContext.js":"5","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/pages/login/index.js":"6","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/pages/newUser/index.js":"7","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/pages/forgotPassword/index.js":"8","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/pages/newPassword/index.js":"9","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/pages/management/index.js":"10","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/pages/review/index.js":"11","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/pages/historyAdmin/index.js":"12","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/pages/historyDefault/index.js":"13","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/pages/userInfo/index.js":"14","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/pages/myRequests/index.js":"15","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/pages/statistics/index.js":"16","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/pages/detPedido/index.js":"17","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/components/loginContainer/index.js":"18","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/components/newUserContainer/index.js":"19","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/components/hamburgerButton/index.js":"20","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/components/header/index.js":"21","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/components/form/index.js":"22","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/components/hamburgerButtonG/index.js":"23","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/components/profileContainer/index.js":"24","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/components/img/profile.js":"25","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/components/hamburgerButton/SidebarData.js":"26","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/components/hamburgerButtonG/SidebarData.js":"27","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/components/img/repo.js":"28","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/components/img/logo.js":"29","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/pages/requestManager/index.js":"30","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/pages/EditUser/index.js":"31","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/helpers/changePassContext.js":"32","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/components/formSideBar/index.js":"33","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/pages/requestForm/index.js":"34"},{"size":196,"mtime":1634733289526,"results":"35","hashOfConfig":"36"},{"size":3913,"mtime":1635460213717,"results":"37","hashOfConfig":"36"},{"size":311,"mtime":1634733289526,"results":"38","hashOfConfig":"36"},{"size":82,"mtime":1634733289526,"results":"39","hashOfConfig":"36"},{"size":85,"mtime":1634733289526,"results":"40","hashOfConfig":"36"},{"size":3170,"mtime":1635460512682,"results":"41","hashOfConfig":"36"},{"size":7181,"mtime":1635450877059,"results":"42","hashOfConfig":"36"},{"size":3195,"mtime":1635167735077,"results":"43","hashOfConfig":"36"},{"size":4372,"mtime":1635167735077,"results":"44","hashOfConfig":"36"},{"size":5597,"mtime":1635459925921,"results":"45","hashOfConfig":"36"},{"size":2834,"mtime":1635460173080,"results":"46","hashOfConfig":"36"},{"size":6141,"mtime":1635459925925,"results":"47","hashOfConfig":"36"},{"size":4760,"mtime":1635460132490,"results":"48","hashOfConfig":"36"},{"size":10352,"mtime":1635458006983,"results":"49","hashOfConfig":"36"},{"size":6018,"mtime":1635457451287,"results":"50","hashOfConfig":"36"},{"size":5905,"mtime":1635459925925,"results":"51","hashOfConfig":"36"},{"size":810,"mtime":1635167735077,"results":"52","hashOfConfig":"36"},{"size":539,"mtime":1635457477670,"results":"53","hashOfConfig":"36"},{"size":493,"mtime":1635450877059,"results":"54","hashOfConfig":"36"},{"size":1441,"mtime":1634733289526,"results":"55","hashOfConfig":"36"},{"size":1492,"mtime":1634733289526,"results":"56","hashOfConfig":"36"},{"size":24181,"mtime":1635450877059,"results":"57","hashOfConfig":"36"},{"size":1443,"mtime":1634733289526,"results":"58","hashOfConfig":"36"},{"size":1113,"mtime":1635457870365,"results":"59","hashOfConfig":"36"},{"size":333,"mtime":1634733289526,"results":"60","hashOfConfig":"36"},{"size":808,"mtime":1634733289526,"results":"61","hashOfConfig":"36"},{"size":1119,"mtime":1634733289526,"results":"62","hashOfConfig":"36"},{"size":237,"mtime":1635450877059,"results":"63","hashOfConfig":"36"},{"size":234,"mtime":1635450877059,"results":"64","hashOfConfig":"36"},{"size":978,"mtime":1635459925921,"results":"65","hashOfConfig":"36"},{"size":6065,"mtime":1635450877059,"results":"66","hashOfConfig":"36"},{"size":85,"mtime":1635167735077,"results":"67","hashOfConfig":"36"},{"size":1319,"mtime":1635461102015,"results":"68","hashOfConfig":"36"},{"size":1195,"mtime":1635461072899,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"c456c9",{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"72"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"72"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"72"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"72"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"72"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"72"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"72"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/index.js",[],["148","149"],"/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/App.js",["150","151"],"/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/NotAuthorized.js",[],"/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/auth.js",[],"/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/helpers/AuthContext.js",[],"/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/pages/login/index.js",["152","153"],"/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/pages/newUser/index.js",["154"],"import React, { useEffect, useContext, useState } from 'react';\nimport { AuthContext } from './../../helpers/AuthContext';\nimport { useHistory } from 'react-router-dom'\nimport axios from 'axios';\nimport '../../styles/newUser.scss';\n\nimport NewUserContainer from '../../components/newUserContainer';\n\nfunction NewUser() {\n  const { setAuthState } = useContext(AuthContext);\n  var history = useHistory();\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:3002/auth\", {\n        headers: {\n          accessToken: localStorage.getItem(\"accessToken\"),\n        },\n      })\n      .then((response) => {\n        if (response.status === 500 || response.data.error) {\n          setAuthState({ status: false });\n          history.push('./')\n        }\n        else {\n          setAuthState({\n            nif: response.data.nif,\n            email: response.data.email,\n            nome: response.data.nome,\n            imagem: \"http://localhost:3002/\" + response.data.imagem,\n            roles: response.data.roles,\n            status: true\n          });\n          var resposta = response.data.roles.includes(\"3_ROLE_ADMIN\");\n          if (resposta === false) {\n            setAuthState({ status: false });\n            history.push('./notAuthorized')\n          }\n        }\n      })\n  }, []);\n\n  //nome\n  const [nameUser, setNameUser] = useState('');\n  //email\n  const [emailUser, setEmailUser] = useState('');\n  //senha\n  const [senhaUser, setSenhaUser] = useState('');\n  //nif\n  const [nifUser, setNifUser] = useState('');\n  //cfp\n  const [cfpUser, setCfpUser] = useState('');\n  //telefone\n  const [telefoneUser, setTelefoneUser] = useState('');\n  //departamento\n  const [deptoUser, setDeptoUser] = useState('');\n\n  var departamento;\n\n  if (deptoUser === \"1\") {\n    departamento = 1;\n  } else if (deptoUser === \"2\") {\n    departamento = 2;\n  } else if (deptoUser === \"3\") {\n    departamento = 3;\n  } else if (deptoUser === \"4\") {\n    departamento = 4;\n  } else if (deptoUser === \"5\") {\n    departamento = 5;\n  } else if (deptoUser === \"6\") {\n    departamento = 6;\n  } else if (deptoUser === \"7\") {\n    departamento = 7;\n  }\n\n  //imagem\n  const [image, setImage] = useState();\n\n  const handleChange = e => {\n    if (e.target.files.length) {\n      setImage(\n        e.target.files[0]\n      );\n    }\n  }\n\n  const handleUpload = () => {\n    const formData = new FormData();\n    formData.append(\"image\", image);\n    formData.append(\"nome\", nameUser);\n    formData.append(\"email\", emailUser);\n    formData.append(\"senha\", senhaUser);\n    formData.append(\"nif\", nifUser);\n    formData.append(\"cfp\", cfpUser);\n    formData.append(\"telefone\", telefoneUser);\n    formData.append(\"depto\", departamento);\n\n    axios.post('http://localhost:3002/registrar', formData, {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\")\n      }\n    }).then((result) => {\n      console.log(result)\n    })\n  };\n\n  // const CreateUserPost = () => {\n  //   const data = {\n  //     nome: nameUser,\n\n  //     email: emailUser,\n\n  //     senha: senhaUser,\n\n  //     nif: nifUser,\n\n  //     cfp: cfpUser,\n\n  //     telefone: telefoneUser,\n\n  //     depto:  departamento,\n  //   }\n  //   axios.post('http://localhost:3002/registrar', data, {\n  //     headers: {\n  //       accessToken: localStorage.getItem(\"accessToken\"),        \n  //     }\n  //   }).then((result) => {\n  //     console.log(result);\n  //   })\n  // }\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    handleUpload();\n    // CreateUserPost();\n  }\n\n  return (\n    <div className=\"content\">\n      <NewUserContainer />\n      <div className=\"container\">\n        <h2 id=\"h2\" className=\"nu-subTitle\">\n          Criar novo usuário\n        </h2>\n        <form onSubmit={onSubmit}>\n          <input\n            className=\"input-box\"\n            name=\"nameUser\"\n            type=\"text\"\n            placeholder=\"Nome\"\n            required\n            onChange={(e) => {\n              setNameUser(e.target.value);\n            }}\n          />\n          <input\n            className=\"input-box\"\n            name=\"emailUser\"\n            type=\"email\"\n            placeholder=\"E-mail\"\n            required\n            onChange={(e) => {\n              setEmailUser(e.target.value);\n            }}\n          />\n          <input\n            className=\"input-box\"\n            name=\"senhaUser\"\n            type=\"password\"\n            placeholder=\"Senha\"\n            required\n            onChange={(e) => {\n              setSenhaUser(e.target.value);\n            }}\n          />\n          <input\n            className=\"input-box\"\n            name=\"nifUser\"\n            type=\"text\"\n            placeholder=\"NIF\"\n            required\n            onChange={(e) => {\n              setNifUser(e.target.value);\n            }}\n          />\n          <input\n            className=\"input-box\"\n            name=\"cfpUser\"\n            type=\"text\"\n            placeholder=\"CFP\"\n            required\n            onChange={(e) => {\n              setCfpUser(e.target.value);\n            }}\n          />\n          <input\n            className=\"input-box\"\n            name=\"telefoneUser\"\n            type=\"text\"\n            placeholder=\"Telefone\"\n            required\n            onChange={(e) => {\n              setTelefoneUser(e.target.value);\n            }}\n          />\n          <label className=\"customize\">\n            <input\n              type=\"file\"\n              name=\"image\"\n              onChange={handleChange}\n              accept=\"image/*\"\n            />\n            Upload\n          </label>\n          <h3 className=\"departamento\">DEPARTAMENTO</h3>\n          <select\n            className=\"select\"\n            id=\"deptoUser\"\n            name=\"deptoUser\"\n            required\n            onChange={(e) => {\n              setDeptoUser(e.target.value);\n            }}\n          >\n            <option value=\"0\" name=\"nothing\" id=\"nothing\">\n              Nenhuma Selecionada\n            </option>\n            <option value=\"1\" name=\"AIP\" id=\"AIP\">\n              Aprendizagem Industrial Presencial\n            </option>\n            <option value=\"2\" name=\"GTP\" id=\"GTP\">\n              Graduação Tecnológica Presencial\n            </option>\n            <option value=\"3\" name=\"PGP\" id=\"PGP\">\n              Pós-Graduação Presencial\n            </option>\n            <option value=\"4\" name=\"EP\" id=\"EP\">\n              Extensão Presencial\n            </option>\n            <option value=\"5\" name=\"IPP\" id=\"IPP\">\n              Iniciação Profissional Presencial\n            </option>\n            <option value=\"6\" name=\"QPP\" id=\"QPP\">\n              Qualificação Profissional Presencial\n            </option>\n            <option value=\"7\" name=\"AEPP\" id=\"AEPP\">\n              Aperfeiç./Especializ. Profis. Presencial\n            </option>\n          </select>\n          <div className=\"btns\">\n            <input\n              type=\"submit\"\n              className=\"nu-button\"\n              id=\"btn\"\n              value=\"Enviar\"\n            />\n            <input\n              className=\"nu-button\"\n              id=\"btn\"\n              value=\"Voltar\"\n            />\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default NewUser;","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/pages/forgotPassword/index.js",[],"/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/pages/newPassword/index.js",["155"],"import React, { useState, useEffect } from 'react';\nimport '../../styles/newPassword.scss';\nimport { useLocation, useHistory } from 'react-router-dom'\nimport axios from \"axios\";\nimport queryString from 'query-string'\n\nimport LoginContainer from '../../components/loginContainer';\n\nexport default function NewPassword() {\n\n  //Acessando os valores da URL ?token=...&email=...\n  const pathName = useLocation().search;\n\n  //Inputs de senha \n  //  ==> ****Realizar verificação no front se ambas as senhas digitadas são iguais antes de enviar.\n  const [senhaInput, setSenhaInput] = useState(\"\");\n  const [senhaInput2, setSenhaInput2] = useState(\"\");\n\n  //Objetos que vão receber os valores fornecidos pela URL\n  const [values, setValues] = useState({\n    token: \"\",\n    email: \"\"\n  })\n\n  //UseState() => Usado para setar o status de envio e realizar alguma alteração em função disso \n  // (mudei o botão de enviar para a mensagem abaixo!)\n  const [enviado, setEnviado] = useState();\n\n  //UseState() => Mensagem que será definida quando a requisição for enviada\n  const [mensagem, setMensagem] = useState(\"\")\n\n  //Instanciando o useHistory para utilização na navegação do site\n  const history = useHistory();\n\n\n  //Função que realiza uma requisição na rota \"/reset-password\" enviando os valores de senha1 e 2, token e email fornecidos pela URL (enviado pelo email)\n  function NewPasswordPost() {\n    //Só envia a requisição se as senhas inseridas estiverem iguais.\n    if (senhaInput !== senhaInput2) {\n      setMensagem(`As senhas inseridas não coincidem!`)\n    }\n    else {\n      const data = { senha: senhaInput, senha2: senhaInput2, token: values.token, email: values.email };\n      axios.post(\"http://localhost:3002/reset-password\", data).then((result) => {\n        setEnviado(true)\n        setMensagem(result.data.message)\n        console.log(result)\n      })\n    }\n  }\n\n  //Função que executa os padrões de required do FORM do html e depois executa a nossa requisição (newPasswordPost)\n  const onSubmit = (e) => {\n    e.preventDefault();\n    NewPasswordPost();\n  }\n\n  //Aquilo que é carregado/executado sempre que a página é recarregada\n  useEffect(() => {\n    //Formatando valores passados pela URL em Objetos ( ?token= ... ?email= ...)\n    const values = queryString.parse(pathName)\n\n    //Acessando esses objetos e Setando esses valores para conseguir usar eles na requisição (axios)\n    setValues({\n      token: values.token,\n      email: values.email\n    })\n  },\n    // Importante para não virar um Loop\n    []);\n\n  return (\n    <div className=\"content\">\n      <LoginContainer />\n      <div className=\"container\">\n        <h2 id=\"h2\" className=\"np-subTitle\">Digite a sua nova senha</h2>\n\n        <form onSubmit={onSubmit}>\n          <input\n            id=\"new-senha\"\n            className=\"password-input-box\"\n            type=\"password\"\n            name=\"password1\"\n            onChange={(e) => {\n              setSenhaInput(e.target.value);\n            }}\n            placeholder=\"Senha\"\n            required\n          />\n          <input\n            id=\"new-senha2\"\n            className=\"password-input-box\"\n            type=\"password\"\n            name=\"password2\"\n            onChange={(e) => {\n              setSenhaInput2(e.target.value);\n            }}\n            placeholder=\"Senha\"\n            required\n          />\n\n          <div className=\"link-box\">\n          </div>\n\n\n          {/* Se o valor de enviado for true, ele muda o botão de enviar para o botão de voltar.\n              * importante: para usar o op. ternario, você deverá ter as mesmas tags no começo e final do operador,\n              por isso foi usado o <> </>. *\n          */}\n          {enviado ?\n            <>\n              <button id=\"forgot-password-button\" className=\"fp-button\" onClick={() => history.push(`/`)}>Voltar</button>\n            </>\n            :\n            <>\n              <input\n                id=\"new-password-button\"\n                className=\"np-button\"\n                name=\"new-password-button\"\n                type=\"submit\"\n                value=\"Enviar\" />\n            </>\n          }\n          {/* Mensagem que será personalizada dependendo do que houver, se for feita ou não uma requisição ou houver algum\n          tipo de erro */}\n          <h4>{mensagem}</h4>\n\n        </form>\n\n      </div>\n    </div>\n  );\n}","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/pages/management/index.js",["156"],"/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/pages/review/index.js",[],"/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/pages/historyAdmin/index.js",["157","158","159"],"/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/pages/historyDefault/index.js",[],"/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/pages/userInfo/index.js",["160"],"import React, { useState, useEffect } from \"react\";\nimport \"../../styles/userInfo.scss\";\nimport axios from \"axios\";\nimport { FaCloudUploadAlt } from \"react-icons/fa\";\nimport { useHistory } from 'react-router';\n// import { PassContext } from \"../../helpers/changePassContext\";\n\nimport ProfileContainer from \"../../components/profileContainer\";\n\nfunction UserInfo() {\n\n  const [image, setImage] = useState({ raw: \"\", preview: \"\" });\n\n  const [nif, setNif] = useState(\"\");\n\n  const [nameUser, setNameUser] = useState(\"\");\n\n  const [emailUser, setEmailUser] = useState(\"\");\n\n  const [cfpUser, setCfpUser] = useState(\"\");\n\n  const [telefoneUser, setTelefoneUser] = useState(\"\");\n\n  const [deptoUser, setDeptoUser] = useState(\"\");\n\n  const [edit, setEdit] = useState(false);\n\n  const [changePass, setChangePass] = useState();\n\n  const [pastPassword, setPastPassword] = useState();\n\n  const [newPassword, setNewPassowrd] = useState();\n\n  const [message, setMessage] = useState();\n\n  var id_depto = deptoUser;\n\n  //estrutura de decisão para exibir corretamente o departamento\n  if (deptoUser === \"1\") {\n    id_depto = \"Aprendizagem Industrial Presencial\"\n  }\n  else if (deptoUser === \"2\") {\n    id_depto = \"Graduação Tecnológica Presencial\"\n  }\n  else if (deptoUser === \"3\") {\n    id_depto = \"Pós-Graduação Presencial\"\n  }\n  else if (deptoUser === \"4\") {\n    id_depto = \"Extensão Presencial\"\n  }\n  else if (deptoUser === \"5\") {\n    id_depto = \"Iniciação Profissional Presencial\"\n  }\n  else if (deptoUser === \"6\") {\n    id_depto = \"Qualificação Profissional Presencial\"\n  }\n  else if (deptoUser === \"7\") {\n    id_depto = \"Aperfeiç./Especializ. Profis. Presencial\"\n  }\n\n  const handleChange = (e) => {\n    if (e.target.files.length) {\n      setImage({\n        preview: URL.createObjectURL(e.target.files[0]),\n        raw: e.target.files[0],\n      });\n    }\n  };\n\n  const history = useHistory();\n\n  const routeUserInfo = () => {\n    history.goBack();\n  }\n\n  const handleUpload = (e) => {\n    e.preventDefault();\n    var departamento;\n\n    //estrutura de decisão para enviar o valor para o back como numero inteiro\n    if (deptoUser === \"1\") {\n      departamento = 1;\n    } else if (deptoUser === \"2\") {\n      departamento = 2;\n    } else if (deptoUser === \"3\") {\n      departamento = 3;\n    } else if (deptoUser === \"4\") {\n      departamento = 4;\n    } else if (deptoUser === \"5\") {\n      departamento = 5;\n    } else if (deptoUser === \"6\") {\n      departamento = 6;\n    } else if (deptoUser === \"7\") {\n      departamento = 7;\n    }\n\n    const formData = new FormData();\n    formData.append(\"image\", image.raw);\n    if (nameUser !== \"\") {\n      formData.append(\"nome\", nameUser);\n    }\n    if (emailUser !== \"\") {\n      formData.append(\"email\", emailUser);\n    }\n    if (cfpUser !== \"\") {\n      formData.append(\"cfp\", cfpUser);\n    }\n    if (telefoneUser !== \"\") {\n      formData.append(\"telefone\", telefoneUser);\n    }\n    if (deptoUser !== \"\") {\n      formData.append(\"depto\", departamento);\n    }\n\n    axios\n      .put(\"http://localhost:3002/meuUsuario\", formData, {\n        headers: {\n          accessToken: localStorage.getItem(\"accessToken\"),\n        },\n      })\n      .then((result) => {\n        console.log(result);\n      });\n  };\n\n  const passwordPost = (e) => {\n    e.preventDefault();\n\n    axios.put(\"http://localhost:3002/mudarSenha\", { senhaAntiga: pastPassword, senhaNova: newPassword }, {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\"),\n      },\n    }).then((result) => {\n      if(result.data.error){\n        setMessage(result.data.error)\n      }\n      else{\n        setMessage(result.data.message)\n      }\n    })\n  }\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:3002/meuUsuario\", {\n        headers: {\n          accessToken: localStorage.getItem(\"accessToken\"),\n        },\n      })\n      .then((result) => {\n        setNif(result.data.nif)\n        setNameUser(result.data.nome);\n        setEmailUser(result.data.email);\n        setCfpUser(result.data.cfp);\n        setTelefoneUser(result.data.telefone);\n        setDeptoUser(result.data.id_depto);\n        setImage({ preview: \"http://localhost:3002/\" + result.data.imagem });\n      });\n  }, []);\n\n  return (\n    <div className=\"content\">\n      {/* <PassContext.Provider value={{ changePass, setChangePass }}> */}\n      <ProfileContainer source={image.preview} name={nameUser} changePassword={() => { setChangePass(true) }} />\n      <div className=\"container\">\n\n        {changePass ? <>         <h2 id=\"h2\" className=\"ui-subTitle\">\n          Alterar senha\n        </h2>\n          <form onSubmit={passwordPost}>\n            <div>\n              <h2 id=\"h2\" className=\"ui-subTitle\">\n                Senha antiga\n              </h2>\n              <input required type=\"password\" className=\"input-box\" placeholder=\"Insira sua senha antiga\"\n                onChange={(e) => {\n                  setPastPassword(e.target.value);\n                }}\n              ></input>\n            </div>\n            <div>\n              <h2 id=\"h2\" className=\"ui-subTitle\">\n                Nova senha  \n              </h2>\n              <input required type=\"password\" className=\"input-box\" placeholder=\"Insira a nova senha\"\n                onChange={(e) => {\n                  setNewPassowrd(e.target.value);\n                }}\n              ></input>\n            </div>\n            <button type=\"submit\">Enviar</button>\n          </form>\n          <button onClick={() => { setChangePass(false) }}>Voltar</button>\n          <h4>{message}</h4>\n        </> : <>\n          <h2 id=\"h2\" className=\"ui-subTitle\">\n            Informações pessoais\n          </h2>\n          {edit ? (\n            <>\n              {\" \"}\n              <form onSubmit={handleUpload}>\n                <h3 className=\"input-title\">NOME</h3>\n                <input\n                  className=\"input-box\"\n                  name=\"nameUser\"\n                  type=\"text\"\n                  placeholder={nameUser}\n                  onChange={(e) => {\n                    setNameUser(e.target.value);\n                  }}\n                />\n                <h3 className=\"input-title\">EMAIL</h3>\n                <input\n                  className=\"input-box\"\n                  name=\"emailUser\"\n                  type=\"email\"\n                  placeholder={emailUser}\n                  onChange={(e) => {\n                    setEmailUser(e.target.value);\n                  }}\n                />\n                <h3 className=\"input-title\">CFP</h3>\n                <input\n                  className=\"input-box\"\n                  name=\"cfpUser\"\n                  type=\"text\"\n                  placeholder={cfpUser}\n                  onChange={(e) => {\n                    setCfpUser(e.target.value);\n                  }}\n                />\n                <h3 className=\"input-title\">TELEFONE</h3>\n                <input\n                  className=\"input-box\"\n                  name=\"telefoneUser\"\n                  type=\"text\"\n                  placeholder={telefoneUser}\n                  onChange={(e) => {\n                    setTelefoneUser(e.target.value);\n                  }}\n                />\n                <h3 className=\"input-title\">IMAGEM</h3>\n                <label className=\"customize\">\n                  <input\n                    type=\"file\"\n                    name=\"image\"\n                    onChange={handleChange}\n                    accept=\"image/*\"\n                  />\n                  <FaCloudUploadAlt className=\"uploud\"/>\n                  Upload\n                </label>\n                <h3 className=\"input-title\">DEPARTAMENTO</h3>\n                <select\n                  className=\"select\"\n                  id=\"deptoUser\"\n                  name=\"deptoUser\"\n                  onChange={(e) => {\n                    setDeptoUser(e.target.value);\n                  }}\n                >\n                  <option value=\"0\" name=\"nothing\" id=\"nothing\">\n                    Nenhuma Selecionada\n                  </option>\n                  <option value=\"1\" name=\"AIP\" id=\"AIP\">\n                    Aprendizagem Industrial Presencial\n                  </option>\n                  <option value=\"2\" name=\"GTP\" id=\"GTP\">\n                    Graduação Tecnológica Presencial\n                  </option>\n                  <option value=\"3\" name=\"PGP\" id=\"PGP\">\n                    Pós-Graduação Presencial\n                  </option>\n                  <option value=\"4\" name=\"EP\" id=\"EP\">\n                    Extensão Presencial\n                  </option>\n                  <option value=\"5\" name=\"IPP\" id=\"IPP\">\n                    Iniciação Profissional Presencial\n                  </option>\n                  <option value=\"6\" name=\"QPP\" id=\"QPP\">\n                    Qualificação Profissional Presencial\n                  </option>\n                  <option value=\"7\" name=\"AEPP\" id=\"AEPP\">\n                    Aperfeiç./Especializ. Profis. Presencial\n                  </option>\n                </select>\n                <div className=\"btns\">\n                  <input type=\"submit\" className=\"nu-button\" id=\"btn\" value=\"Enviar\"\n                  />\n                  <button className=\"nu-button\" id=\"btn\" onClick={() => { setEdit(false) }}> Voltar</button>\n                </div>\n              </form>\n            </>\n          ) : (\n            <>\n              <h3 className=\"input-title\">NIF</h3>\n              <h2 className=\"userInformation\">{nif}</h2>\n              <h3 className=\"input-title\">EMAIL</h3>\n              <h2 className=\"userInformation\">{emailUser}</h2>\n              <h3 className=\"input-title\">CFP</h3>\n              <h2 className=\"userInformation\">{cfpUser}</h2>\n              <h3 className=\"input-title\">TELEFONE</h3>\n              <h2 className=\"userInformation\">{telefoneUser}</h2>\n              <h3 className=\"input-title\">DEPARTAMENTO</h3>\n              <h2 className=\"userInformation\">{id_depto}</h2>\n              <div className=\"btns\">\n                <button className=\"btn-edit-user\" id=\"btn\" onClick={() => { setEdit(true) }}> Editar </button>\n                <button className=\"btn-back-user\" id=\"btn\" onClick={() => { history.push(\"/requestForm\")}}> Voltar</button>\n              </div>\n            </>\n          )}</>}\n\n      </div>\n      {/* </PassContext.Provider> */}\n    </div>\n  );\n}\n\nexport default UserInfo;\n","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/pages/myRequests/index.js",["161"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\"\nimport ProfileContainer from \"../../components/profileContainer\";\nimport axios from 'axios'\n// import { PassContext } from \"../../helpers/changePassContext\";\nimport { Button, Card, Table } from 'react-bootstrap';\n\nconst MyRequests = () => {\n\n    const history = useHistory();\n\n    // const { setChangePass } = useContext(PassContext);\n\n    var [pedidos, setPedidos] = useState({\n        status: false,\n        list: [],\n        message: \"\"\n    });\n\n    var [nameUser, setNameUser] = useState();\n    var [image, setImage] = useState();\n    var [loading, setLoading] = useState();\n\n    useEffect(() => {\n        setLoading(true)\n        axios.get(\"http://localhost:3002/meusPedidos\", {\n            headers: {\n                accessToken: localStorage.getItem(\"accessToken\"),\n            },\n        })\n            .then((result) => {\n                console.log(result\n                )\n                if (result.data.length > 0) {\n                    result.data.map((data) => {\n                        if (data.avaliacao_pedido === \"Ainda não avaliado.\") {\n                            data.avaliacao_pedido = \"Ainda Não avaliado! | Criado em:\" + data.criado\n                            data.atualizado = false\n                        }\n                        else {\n                            data.avaliacao_pedido += \" | Atualizado em:\" + data.atualizado\n                            data.atualizado = true\n                        }\n                        // console.log(result.data.avaliacao_pedido)\n                        return null;\n                    })\n                    setPedidos({\n                        list: result.data,\n                        status: true\n                    })\n                }\n                else {\n                    setPedidos({\n                        message: result.data.message\n                    })\n                }\n            });\n\n        axios.get(\"http://localhost:3002/meuUsuario\", {\n            headers: {\n                accessToken: localStorage.getItem(\"accessToken\"),\n            },\n        }).then((result) => {\n            setImage(\"http://localhost:3002/\" + result.data.imagem)\n            setNameUser(result.data.nome)\n            setLoading(false)\n        })\n    }, []);\n\n    return (\n        <>\n            <div className=\"content\">\n                {loading ? <> Loading...</> : <><ProfileContainer requestsNoInfo=\"true\" source={image} name={nameUser} changePassword={() => {\n                    history.push(\"/userInfo\")\n                }} />\n                    <div className=\"container\">\n                        {pedidos.status ?\n                            <>\n                                <Table striped bordered hover size=\"sm\">\n                                    <thead>\n                                        <tr>\n                                            <th>Pedido</th>\n                                            <th>Centro de custos</th>\n                                            <th>Status</th>\n                                            <th>⠀⠀⠀⠀⠀⠀⠀⠀⠀</th>\n                                        </tr>\n                                    </thead>\n                                    {pedidos.list.map((data) => (\n                                        <React.Fragment key={data.id_pedido}> {/* é a mesma coisa que <> ... <> é a abreviação de <React.Fragment>\n                            A key é para referenciar uma key única para o map não se perder... e também parar de dar erro no console */}\n                                            <tbody>\n                                                <tr>\n                                                    <td>\n                                                        <Card.Text>{data.titulo_pedido}</Card.Text>\n                                                    </td>\n                                                    <td>\n                                                        <Card.Text>{data.centro_custos}</Card.Text>\n                                                    </td>\n                                                    <td>\n                                                        <Card.Text>{data.avaliacao_pedido}</Card.Text>\n                                                    </td>\n                                                    <td >\n                                                        {data.atualizado ? <>\n                                                        <Button className=\"detailsForm\" variant=\"secondary\" onClick={() => { history.push(\"/detPedido/\" + data.id_pedido) }}>detalhes</Button>\n                                                        </> :\n                                                            <>\n                                                                <Button className=\"detailsForm\" variant=\"secondary\" onClick={() => { history.push(\"/detPedido/\" + data.id_pedido) }}>avaliar</Button>\n                                                                <Button className=\"detailsForm\" variant=\"secondary\" onClick={() => { history.push(\"/detPedido/\" + data.id_pedido) }}>detalhes</Button>\n                                                            </>}\n\n                                                    </td>\n                                                </tr>\n                                            </tbody>\n                                        </React.Fragment>\n                                    ))}\n                                </Table>\n\n                            </> :\n                            <>\n                                <h1>{pedidos.message}</h1>\n                            </>\n                        }\n                        <Button className=\"btn-back-user\" onClick={() => { history.push(\"/userInfo\") }}> Voltar </Button>\n                    </div>\n                </>}\n            </div>\n        </>\n    )\n}\n\nexport default MyRequests;","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/pages/statistics/index.js",["162","163","164"],"/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/pages/detPedido/index.js",["165"],"import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\n\nexport default function DetPedido() {\n    var { id } = useParams();\n\n    var [message, setMessage] = useState();\n\n    useEffect(() => {\n        axios\n            .get(\"http://localhost:3002/detPedido/\" + id, {\n                headers: {\n                    accessToken: localStorage.getItem(\"accessToken\"),\n                },\n            }).then((result) => {\n                console.log(result)\n                if(result.data.error){\n                    setMessage(result.data.error)\n                }\n                else { setMessage(result.data.message) }\n            })\n        }, [])\n\n\n        return (\n            <>\n            <h1>{message}</h1>\n            </>\n        )\n}\n\n","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/components/loginContainer/index.js",[],"/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/components/newUserContainer/index.js",["166"],"import React from 'react';\nimport './styles.scss';\nimport Profile from '../img/profile.js';\n\nfunction NewUserContainer () {\n    return(\n        <div className=\"left-container\" >\n            <div className=\"icon-container\" >\n            <img className=\"profile-image\" src=\"assets/img/usuario.png\" id=\"profile-image\" name=\"profile-image\" alt=\"imagem de perfil\"/>\n            </div>\n            <h2 className=\"subTitle\">Novo Usuário</h2>\n        </div>\n    );\n}\n\nexport default NewUserContainer;","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/components/hamburgerButton/index.js",[],"/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/components/header/index.js",["167"],"import React from 'react';\nimport './styles.scss';\nimport { FaHome } from 'react-icons/fa';\nimport { FaUserAlt } from 'react-icons/fa';\nimport { FaSignOutAlt } from 'react-icons/fa';\nimport { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport { useHistory } from \"react-router\";\n\n\nimport Logo from '../img/logo';\n\nfunction Header () {\n  const history = useHistory();\n\n  const [authState, setAuthState] = useState({\n    email: \"\",\n    nif: 0,\n    status: false,\n  });\n\n  useEffect(() => {\n    axios.get(\"http://localhost:3002/auth/\", {\n        headers: {\n          accessToken: localStorage.getItem(\"accessToken\"),\n        },\n      })\n      .then((response) => {\n        if (response.data.error) {\n          setAuthState({ ...authState, status: false });\n        } else {\n          setAuthState({\n            email: response.data.email,\n            nif: response.data.id,\n            status: true,\n          });\n        }\n      });\n  }, []);\n\n  const routeUi = () => {\n    history.push('/userInfo')\n  }\n\n  const logout = () => {\n    localStorage.removeItem(\"accessToken\");\n    setAuthState(false);\n    history.push('/')\n  }; \n  \n  \n  return (\n    <header>\n      <Logo />\n      {/* <img src={`http://localhost:3002` + imagem}  /> */}\n      <div className=\"icons\">\n        <FaHome className=\"icon\" />\n        <FaUserAlt className=\"icon\" onClick={routeUi} />\n        <FaSignOutAlt className=\"icon\" onClick={logout} />\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/components/form/index.js",[],"/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/components/hamburgerButtonG/index.js",[],"/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/components/profileContainer/index.js",[],"/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/components/img/profile.js",[],"/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/components/hamburgerButton/SidebarData.js",[],"/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/components/hamburgerButtonG/SidebarData.js",[],"/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/components/img/repo.js",[],"/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/components/img/logo.js",[],"/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/pages/requestManager/index.js",["168","169","170","171","172","173"],"/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/pages/EditUser/index.js",["174","175","176","177"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { FaCloudUploadAlt } from \"react-icons/fa\";\nimport { useHistory } from 'react-router';\n\nfunction EditUser() {\n\n  const [image, setImage] = useState({ raw: \"\", preview: \"\" });\n\n  const [nameUser, setNameUser] = useState(\"\");\n\n  const [nifUser, setNifUser] = useState(\"\");\n\n  const [emailUser, setEmailUser] = useState(\"\");\n\n  const [cfpUser, setCfpUser] = useState(\"\");\n\n  const [telefoneUser, setTelefoneUser] = useState(\"\");\n\n  const [deptoUser, setDeptoUser] = useState(\"\");\n\n  var id_depto = deptoUser;\n\n  //estrutura de decisão para exibir corretamente o departamento\n  if (deptoUser === \"1\") {\n    id_depto = \"Aprendizagem Industrial Presencial\"\n  }\n  else if (deptoUser === \"2\") {\n    id_depto = \"Graduação Tecnológica Presencial\"\n  }\n  else if (deptoUser === \"3\") {\n    id_depto = \"Pós-Graduação Presencial\"\n  }\n  else if (deptoUser === \"4\") {\n    id_depto = \"Extensão Presencial\"\n  }\n  else if (deptoUser === \"5\") {\n    id_depto = \"Iniciação Profissional Presencial\"\n  }\n  else if (deptoUser === \"6\") {\n    id_depto = \"Qualificação Profissional Presencial\"\n  }\n  else if (deptoUser === \"7\") {\n    id_depto = \"Aperfeiç./Especializ. Profis. Presencial\"\n  }\n\n  const handleChange = (e) => {\n    if (e.target.files.length) {\n      setImage({\n        preview: URL.createObjectURL(e.target.files[0]),\n        raw: e.target.files[0],\n      });\n    }\n  };\n\n  const history = useHistory();\n\n  const handleUpload = (e) => {\n    e.preventDefault();\n    var departamento;\n\n    //estrutura de decisão para enviar o valor para o back como numero inteiro\n    if (deptoUser === \"1\") {\n      departamento = 1;\n    } else if (deptoUser === \"2\") {\n      departamento = 2;\n    } else if (deptoUser === \"3\") {\n      departamento = 3;\n    } else if (deptoUser === \"4\") {\n      departamento = 4;\n    } else if (deptoUser === \"5\") {\n      departamento = 5;\n    } else if (deptoUser === \"6\") {\n      departamento = 6;\n    } else if (deptoUser === \"7\") {\n      departamento = 7;\n    }\n\n    const formData = new FormData();\n    formData.append(\"image\", image.raw);\n    if (nameUser !== \"\") {\n      formData.append(\"nome\", nameUser);\n    }\n    if (emailUser !== \"\") {\n      formData.append(\"email\", emailUser);\n    }\n    if (cfpUser !== \"\") {\n      formData.append(\"cfp\", cfpUser);\n    }\n    if (telefoneUser !== \"\") {\n      formData.append(\"telefone\", telefoneUser);\n    }\n    if (deptoUser !== \"\") {\n      formData.append(\"depto\", departamento);\n    }\n\n    axios\n      .put(`http://localhost:3002/meuUsuario`, formData, {\n        headers: {\n          accessToken: localStorage.getItem(\"accessToken\"),\n        },\n      })\n      .then((result) => {\n        console.log(result);\n      });\n  };\n\n  useEffect(() => {\n    axios.get(`http://localhost:3002/meuUsuario`, {\n        headers: {\n          accessToken: localStorage.getItem(\"accessToken\"),\n        },\n      })\n      .then((result) => {\n        setNameUser(result.data.nome);\n        setEmailUser(result.data.email);\n        setCfpUser(result.data.cfp);\n        setTelefoneUser(result.data.telefone);\n        setDeptoUser(result.data.id_depto);\n        setImage({ preview: \"http://localhost:3002/\" + result.data.imagem });\n      });\n  }, []);\n\n  return (\n    <div>\n      <div>\n        <h2 id=\"h2\">\n          Informações pessoais\n        </h2>\n        <h3>NOME</h3>\n        <form onSubmit={handleUpload}></form>\n        <input\n          className=\"input-box\"\n          name=\"nameUser\"\n          type=\"text\"\n          placeholder={nameUser}\n          onChange={(e) => {\n            setNameUser(e.target.value);\n          }}\n        />\n        <h3>EMAIL</h3>\n        <input\n          className=\"input-box\"\n          name=\"emailUser\"\n          type=\"email\"\n          placeholder={emailUser}\n          onChange={(e) => {\n            setEmailUser(e.target.value);\n          }}\n        />\n        <h3>CFP</h3>\n        <input\n          className=\"input-box\"\n          name=\"cfpUser\"\n          type=\"text\"\n          placeholder={cfpUser}\n          onChange={(e) => {\n            setCfpUser(e.target.value);\n          }}\n        />\n        <h3>TELEFONE</h3>\n        <input\n          className=\"input-box\"\n          name=\"telefoneUser\"\n          type=\"text\"\n          placeholder={telefoneUser}\n          onChange={(e) => {\n            setTelefoneUser(e.target.value);\n          }}\n        />\n        <h3>IMAGEM</h3>\n        <label className=\"customize\">\n          <input\n            type=\"file\"\n            name=\"image\"\n            onChange={handleChange}\n            accept=\"image/*\"\n          />\n          <FaCloudUploadAlt className=\"uploud\" />\n          Upload\n        </label>\n        <h3>DEPARTAMENTO</h3>\n        <select\n          className=\"select\"\n          id=\"deptoUser\"\n          name=\"deptoUser\"\n          onChange={(e) => {\n            setDeptoUser(e.target.value);\n          }}\n        >\n          <option value=\"0\" name=\"nothing\" id=\"nothing\">\n            Nenhuma Selecionada\n          </option>\n          <option value=\"1\" name=\"AIP\" id=\"AIP\">\n            Aprendizagem Industrial Presencial\n          </option>\n          <option value=\"2\" name=\"GTP\" id=\"GTP\">\n            Graduação Tecnológica Presencial\n          </option>\n          <option value=\"3\" name=\"PGP\" id=\"PGP\">\n            Pós-Graduação Presencial\n          </option>\n          <option value=\"4\" name=\"EP\" id=\"EP\">\n            Extensão Presencial\n          </option>\n          <option value=\"5\" name=\"IPP\" id=\"IPP\">\n            Iniciação Profissional Presencial\n          </option>\n          <option value=\"6\" name=\"QPP\" id=\"QPP\">\n            Qualificação Profissional Presencial\n          </option>\n          <option value=\"7\" name=\"AEPP\" id=\"AEPP\">\n            Aperfeiç./Especializ. Profis. Presencial\n          </option>\n        </select>\n        <div className=\"btns\">\n          <input type=\"submit\" id=\"btn\" value=\"Enviar\"\n          />\n          <button> Voltar</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default EditUser;","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/helpers/changePassContext.js",[],["178","179"],"/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/components/formSideBar/index.js",[],"/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/pages/requestForm/index.js",["180"],{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","severity":1,"message":"186","line":2,"column":50,"nodeType":"187","messageId":"188","endLine":2,"endColumn":60},{"ruleId":"185","severity":1,"message":"189","line":19,"column":10,"nodeType":"187","messageId":"188","endLine":19,"endColumn":25},{"ruleId":"185","severity":1,"message":"190","line":1,"column":17,"nodeType":"187","messageId":"188","endLine":1,"endColumn":28},{"ruleId":"191","severity":1,"message":"192","line":64,"column":6,"nodeType":"193","endLine":64,"endColumn":8,"suggestions":"194"},{"ruleId":"191","severity":1,"message":"195","line":41,"column":6,"nodeType":"193","endLine":41,"endColumn":8,"suggestions":"196"},{"ruleId":"191","severity":1,"message":"197","line":70,"column":5,"nodeType":"193","endLine":70,"endColumn":7,"suggestions":"198"},{"ruleId":"191","severity":1,"message":"195","line":53,"column":6,"nodeType":"193","endLine":53,"endColumn":8,"suggestions":"199"},{"ruleId":"200","severity":1,"message":"201","line":24,"column":29,"nodeType":"202","messageId":"203","endLine":24,"endColumn":31},{"ruleId":"200","severity":1,"message":"201","line":38,"column":24,"nodeType":"202","messageId":"203","endLine":38,"endColumn":26},{"ruleId":"191","severity":1,"message":"195","line":44,"column":6,"nodeType":"193","endLine":44,"endColumn":8,"suggestions":"204"},{"ruleId":"185","severity":1,"message":"205","line":72,"column":9,"nodeType":"187","messageId":"188","endLine":72,"endColumn":22},{"ruleId":"185","severity":1,"message":"206","line":1,"column":38,"nodeType":"187","messageId":"188","endLine":1,"endColumn":48},{"ruleId":"200","severity":1,"message":"201","line":24,"column":29,"nodeType":"202","messageId":"203","endLine":24,"endColumn":31},{"ruleId":"200","severity":1,"message":"201","line":38,"column":24,"nodeType":"202","messageId":"203","endLine":38,"endColumn":26},{"ruleId":"191","severity":1,"message":"195","line":44,"column":6,"nodeType":"193","endLine":44,"endColumn":8,"suggestions":"207"},{"ruleId":"191","severity":1,"message":"208","line":23,"column":12,"nodeType":"193","endLine":23,"endColumn":14,"suggestions":"209"},{"ruleId":"185","severity":1,"message":"210","line":3,"column":8,"nodeType":"187","messageId":"188","endLine":3,"endColumn":15},{"ruleId":"191","severity":1,"message":"211","line":39,"column":6,"nodeType":"193","endLine":39,"endColumn":8,"suggestions":"212"},{"ruleId":"185","severity":1,"message":"213","line":1,"column":17,"nodeType":"187","messageId":"188","endLine":1,"endColumn":25},{"ruleId":"185","severity":1,"message":"214","line":1,"column":27,"nodeType":"187","messageId":"188","endLine":1,"endColumn":36},{"ruleId":"185","severity":1,"message":"206","line":1,"column":38,"nodeType":"187","messageId":"188","endLine":1,"endColumn":48},{"ruleId":"185","severity":1,"message":"186","line":3,"column":10,"nodeType":"187","messageId":"188","endLine":3,"endColumn":20},{"ruleId":"185","severity":1,"message":"215","line":4,"column":8,"nodeType":"187","messageId":"188","endLine":4,"endColumn":13},{"ruleId":"185","severity":1,"message":"216","line":6,"column":10,"nodeType":"187","messageId":"188","endLine":6,"endColumn":21},{"ruleId":"185","severity":1,"message":"217","line":12,"column":10,"nodeType":"187","messageId":"188","endLine":12,"endColumn":17},{"ruleId":"185","severity":1,"message":"218","line":12,"column":19,"nodeType":"187","messageId":"188","endLine":12,"endColumn":29},{"ruleId":"185","severity":1,"message":"219","line":44,"column":5,"nodeType":"187","messageId":"188","endLine":44,"endColumn":13},{"ruleId":"185","severity":1,"message":"220","line":56,"column":9,"nodeType":"187","messageId":"188","endLine":56,"endColumn":16},{"ruleId":"181","replacedBy":"221"},{"ruleId":"183","replacedBy":"222"},{"ruleId":"185","severity":1,"message":"220","line":18,"column":7,"nodeType":"187","messageId":"188","endLine":18,"endColumn":14},"no-native-reassign",["223"],"no-negated-in-lhs",["224"],"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'isAuthenticated' is defined but never used.","'useCallback' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["225"],"React Hook useEffect has missing dependencies: 'history' and 'setAuthState'. Either include them or remove the dependency array.",["226"],"React Hook useEffect has a missing dependency: 'pathName'. Either include it or remove the dependency array.",["227"],["228"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["229"],"'routeUserInfo' is assigned a value but never used.","'useContext' is defined but never used.",["230"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["231"],"'Profile' is defined but never used.","React Hook useEffect has a missing dependency: 'authState'. Either include it or remove the dependency array. You can also do a functional update 'setAuthState(a => ...)' if you only need 'authState' in the 'setAuthState' call.",["232"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","'AuthContext' is defined but never used.","'nifUser' is assigned a value but never used.","'setNifUser' is assigned a value but never used.","'id_depto' is assigned a value but never used.","'history' is assigned a value but never used.",["223"],["224"],"no-global-assign","no-unsafe-negation",{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},{"desc":"235","fix":"239"},{"desc":"235","fix":"240"},{"desc":"235","fix":"241"},{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},"Update the dependencies array to be: [history]",{"range":"246","text":"247"},"Update the dependencies array to be: [history, setAuthState]",{"range":"248","text":"249"},"Update the dependencies array to be: [pathName]",{"range":"250","text":"251"},{"range":"252","text":"249"},{"range":"253","text":"249"},{"range":"254","text":"249"},"Update the dependencies array to be: [id]",{"range":"255","text":"256"},"Update the dependencies array to be: [authState]",{"range":"257","text":"258"},[1811,1813],"[history]",[1282,1284],"[history, setAuthState]",[2514,2516],"[pathName]",[1773,1775],[1369,1371],[1421,1423],[712,714],"[id]",[955,957],"[authState]"]