[{"/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/index.js":"1","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/App.js":"2","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/NotAuthorized.js":"3","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/auth.js":"4","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/helpers/AuthContext.js":"5","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/pages/newUser/index.js":"6","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/pages/forgotPassword/index.js":"7","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/pages/newPassword/index.js":"8","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/pages/requestFormC/index.js":"9","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/pages/userInfo/index.js":"10","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/pages/requestFormG/index.js":"11","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/pages/management/index.js":"12","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/pages/login/index.js":"13","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/pages/review/index.js":"14","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/pages/historyAdmin/index.js":"15","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/pages/statistics/index.js":"16","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/pages/historyDefault/index.js":"17","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/components/loginContainer/index.js":"18","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/components/newUserContainer/index.js":"19","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/components/hamburgerButton/index.js":"20","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/components/header/index.js":"21","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/components/sidebarColaborador/index.js":"22","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/components/profileContainer/index.js":"23","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/components/form/index.js":"24","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/components/sidebarGerencia/index.js":"25","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/components/managerImg/index.js":"26","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/components/hamburgerButtonG/index.js":"27","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/components/img/profile.js":"28","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/components/hamburgerButton/SidebarData.js":"29","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/components/hamburgerButtonG/SidebarData.js":"30","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/components/img/repo.js":"31","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/components/img/logo.js":"32","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/pages/myRequests/index.js":"33","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/pages/detPedido/index.js":"34"},{"size":196,"mtime":1634733289526,"results":"35","hashOfConfig":"36"},{"size":3755,"mtime":1634879358626,"results":"37","hashOfConfig":"36"},{"size":311,"mtime":1634733289526,"results":"38","hashOfConfig":"36"},{"size":82,"mtime":1634733289526,"results":"39","hashOfConfig":"36"},{"size":85,"mtime":1634733289526,"results":"40","hashOfConfig":"36"},{"size":7091,"mtime":1634858653886,"results":"41","hashOfConfig":"36"},{"size":3195,"mtime":1634879327582,"results":"42","hashOfConfig":"36"},{"size":4372,"mtime":1634733289634,"results":"43","hashOfConfig":"36"},{"size":411,"mtime":1634733289634,"results":"44","hashOfConfig":"36"},{"size":10178,"mtime":1635112993505,"results":"45","hashOfConfig":"36"},{"size":1516,"mtime":1634733289634,"results":"46","hashOfConfig":"36"},{"size":5137,"mtime":1634858653886,"results":"47","hashOfConfig":"36"},{"size":3173,"mtime":1634881444524,"results":"48","hashOfConfig":"36"},{"size":2049,"mtime":1634733289634,"results":"49","hashOfConfig":"36"},{"size":6145,"mtime":1634733289526,"results":"50","hashOfConfig":"36"},{"size":5909,"mtime":1634733289634,"results":"51","hashOfConfig":"36"},{"size":4789,"mtime":1634733289526,"results":"52","hashOfConfig":"36"},{"size":537,"mtime":1634733289526,"results":"53","hashOfConfig":"36"},{"size":493,"mtime":1634733289526,"results":"54","hashOfConfig":"36"},{"size":1441,"mtime":1634733289526,"results":"55","hashOfConfig":"36"},{"size":1492,"mtime":1634733289526,"results":"56","hashOfConfig":"36"},{"size":660,"mtime":1634733289526,"results":"57","hashOfConfig":"36"},{"size":1260,"mtime":1635112786446,"results":"58","hashOfConfig":"36"},{"size":24181,"mtime":1634858653878,"results":"59","hashOfConfig":"36"},{"size":1066,"mtime":1634733289526,"results":"60","hashOfConfig":"36"},{"size":252,"mtime":1634733289526,"results":"61","hashOfConfig":"36"},{"size":1443,"mtime":1634733289526,"results":"62","hashOfConfig":"36"},{"size":333,"mtime":1634733289526,"results":"63","hashOfConfig":"36"},{"size":808,"mtime":1634733289526,"results":"64","hashOfConfig":"36"},{"size":1119,"mtime":1634733289526,"results":"65","hashOfConfig":"36"},{"size":237,"mtime":1634733289526,"results":"66","hashOfConfig":"36"},{"size":234,"mtime":1634733289526,"results":"67","hashOfConfig":"36"},{"size":5586,"mtime":1635112497702,"results":"68","hashOfConfig":"36"},{"size":810,"mtime":1634873624280,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"c456c9",{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"72"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"72"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"72"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"72"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"72"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"72"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"72"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"72"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"72"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"72"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"72"},"/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/index.js",[],["151","152"],"/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/App.js",["153","154"],"import { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route, useHistory } from 'react-router-dom';\nimport login from './pages/login';\nimport notAuthorized from \"./NotAuthorized\";\nimport newUser from './pages/newUser';\nimport newPassword from './pages/newPassword';\nimport forgotPassword from './pages/forgotPassword';\nimport userInfo from './pages/userInfo';\nimport requestFormC from './pages/requestFormC';\nimport requestFormG from './pages/requestFormG';\nimport management from './pages/management';\nimport review from './pages/review';\nimport historyDefault from './pages/historyDefault';\nimport historyAdmin from './pages/historyAdmin';\nimport statistics from './pages/statistics';\nimport myRequests from './pages/myRequests';\nimport detPedido from './pages/detPedido'\nimport { isAuthenticated } from './auth';\nimport axios from \"axios\";\nimport { AuthContext } from \"./helpers/AuthContext\";\n\n\nfunction App() {\n\n  const [authState, setAuthState] = useState({\n    nif: 0,\n    email: \"\",\n    nome: \"\",\n    imagem: \"\",\n    Roles: [],\n    status: false\n  });\n\n  const [redirect, setRedirect] = useState(false)\n \n  useEffect(() => {\n    axios\n      .get(\"http://localhost:3002/auth\", {\n        headers: {\n          accessToken: localStorage.getItem(\"accessToken\"),\n        },\n        validateStatus: () => true\n      })\n      .then((response) => {\n        if (response.status === 500 || response.data.error) {\n          setAuthState({ status: false });\n          setRedirect(true)\n        }\n        else {\n          setAuthState({\n            status: true,\n            nif: response.data.nif,\n            email: response.data.email,\n            nome: response.data.nome,\n            imagem: \"http://localhost:3002/\" + response.data.imagem,\n            roles: response.data.roles,\n          });\n        setRedirect(false)\n        }\n      })\n  }, []);\n\n  // const PrivateRoute = ({ component: Component, ...rest }) => (\n  //   <Route\n  //     {...rest}\n  //     render={props =>\n  //       isAuthenticated() ? (\n  //         <Component {...props} />\n  //       ) : (\n  //         <Redirect to={{ pathname: \"/NotFound\", state: { from: props.location } }} />\n  //       )\n  //     }\n  //   />\n  // );\n\n\n  return (\n    <>\n      <AuthContext.Provider value={{ authState, setAuthState }}>\n        <Router>\n\n          <Switch>\n            <Route path='/' exact component={login} />\n            <Route path='/forgotPassword' exact component={forgotPassword} />\n            <Route path='/newPassword' exact component={newPassword} />\n            {redirect ? (\n              <>\n                  <Route path='*' exact component={notAuthorized} />\n              </>\n            ) :\n              <>\n                <Route path='/newUser' exact component={newUser} />\n                <Route path='/userInfo' exact component={userInfo} />\n                <Route path='/requestFormC' exact component={requestFormC} />\n                <Route path='/requestFormG' exact component={requestFormG} />\n                <Route path='/management' exact component={management} />\n                <Route path='/review/:id' exact component={review} />\n                <Route path='/historyDefault' exact component={historyDefault} />\n                <Route path='/historyAdmin' exact component={historyAdmin} />\n                <Route path='/statistics' exact component={statistics} />\n                <Route path='/notAuthorized' exact component={notAuthorized} />\n                <Route path='/myRequests' exact component={myRequests} />\n                <Route path='/detPedido/:id' exact component={detPedido} />\n              </>\n            }\n          </Switch>\n        </Router>\n      </AuthContext.Provider>\n    </>\n  );\n}\n\nexport default App;","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/NotAuthorized.js",[],"/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/auth.js",[],"/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/helpers/AuthContext.js",[],"/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/pages/newUser/index.js",["155"],"import React, { useEffect, useContext, useState } from 'react';\nimport { AuthContext } from './../../helpers/AuthContext';\nimport { useHistory } from 'react-router-dom'\nimport axios from 'axios';\nimport '../../styles/newUser.scss';\n\nimport NewUserContainer from '../../components/newUserContainer';\n\nfunction NewUser() {\n  const { setAuthState } = useContext(AuthContext);\n  var history = useHistory();\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:3002/auth\", {\n        headers: {\n          accessToken: localStorage.getItem(\"accessToken\"),\n        },\n      })\n      .then((response) => {\n        if (response.status === 500 || response.data.error) {\n          setAuthState({ status: false });\n          history.push('./')\n        }\n        else {\n          setAuthState({\n            nif: response.data.nif,\n            email: response.data.email,\n            nome: response.data.nome,\n            imagem: \"http://localhost:3002/\" + response.data.imagem,\n            roles: response.data.roles,\n            status: true\n          });\n          var resposta = response.data.roles.includes(\"3_ROLE_ADMIN\");\n          if (resposta === false) {\n            setAuthState({ status: false });\n            history.push('./notAuthorized')\n          }\n        }\n      })\n  }, []);\n\n  //nome\n  const [nameUser, setNameUser] = useState('');\n  //email\n  const [emailUser, setEmailUser] = useState('');\n  //senha\n  const [senhaUser, setSenhaUser] = useState('');\n  //nif\n  const [nifUser, setNifUser] = useState('');\n  //cfp\n  const [cfpUser, setCfpUser] = useState('');\n  //telefone\n  const [telefoneUser, setTelefoneUser] = useState('');\n  //departamento\n  const [deptoUser, setDeptoUser] = useState('');\n\n  var departamento;\n\n  if (deptoUser === \"1\") {\n    departamento = 1;\n  } else if (deptoUser === \"2\") {\n    departamento = 2;\n  } else if (deptoUser === \"3\") {\n    departamento = 3;\n  } else if (deptoUser === \"4\") {\n    departamento = 4;\n  } else if (deptoUser === \"5\") {\n    departamento = 5;\n  } else if (deptoUser === \"6\") {\n    departamento = 6;\n  } else if (deptoUser === \"7\") {\n    departamento = 7;\n  }\n\n  //imagem\n  const [image, setImage] = useState();\n\n  const handleChange = e => {\n    if (e.target.files.length) {\n      setImage(\n        e.target.files[0]\n      );\n    }\n  }\n\n  const handleUpload = () => {\n    const formData = new FormData();\n    formData.append(\"image\", image);\n    formData.append(\"nome\", nameUser);\n    formData.append(\"email\", emailUser);\n    formData.append(\"senha\", senhaUser);\n    formData.append(\"nif\", nifUser);\n    formData.append(\"cfp\", cfpUser);\n    formData.append(\"telefone\", telefoneUser);\n    formData.append(\"depto\", departamento);\n\n    axios.post('http://localhost:3002/registrar', formData, {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\")\n      }\n    }).then((result) => {\n      console.log(result)\n    })\n  };\n\n  // const CreateUserPost = () => {\n  //   const data = {\n  //     nome: nameUser,\n\n  //     email: emailUser,\n\n  //     senha: senhaUser,\n\n  //     nif: nifUser,\n\n  //     cfp: cfpUser,\n\n  //     telefone: telefoneUser,\n\n  //     depto:  departamento,\n  //   }\n  //   axios.post('http://localhost:3002/registrar', data, {\n  //     headers: {\n  //       accessToken: localStorage.getItem(\"accessToken\"),        \n  //     }\n  //   }).then((result) => {\n  //     console.log(result);\n  //   })\n  // }\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    handleUpload();\n    // CreateUserPost();\n  }\n\n  return (\n    <div className=\"content\">\n      <NewUserContainer />\n      <div className=\"container\">\n        <h2 id=\"h2\" className=\"nu-subTitle\">\n          Criar novo usuário\n        </h2>\n        <form onSubmit={onSubmit}>\n          <input\n            className=\"input-box\"\n            name=\"nameUser\"\n            type=\"text\"\n            placeholder=\"Nome\"\n            required\n            onChange={(e) => {\n              setNameUser(e.target.value);\n            }}\n          />\n          <input\n            className=\"input-box\"\n            name=\"emailUser\"\n            type=\"email\"\n            placeholder=\"E-mail\"\n            required\n            onChange={(e) => {\n              setEmailUser(e.target.value);\n            }}\n          />\n          <input\n            className=\"input-box\"\n            name=\"senhaUser\"\n            type=\"password\"\n            placeholder=\"Senha\"\n            required\n            onChange={(e) => {\n              setSenhaUser(e.target.value);\n            }}\n          />\n          <input\n            className=\"input-box\"\n            name=\"nifUser\"\n            type=\"text\"\n            placeholder=\"NIF\"\n            required\n            onChange={(e) => {\n              setNifUser(e.target.value);\n            }}\n          />\n          <input\n            className=\"input-box\"\n            name=\"cfpUser\"\n            type=\"text\"\n            placeholder=\"CFP\"\n            required\n            onChange={(e) => {\n              setCfpUser(e.target.value);\n            }}\n          />\n          <input\n            className=\"input-box\"\n            name=\"telefoneUser\"\n            type=\"text\"\n            placeholder=\"Telefone\"\n            required\n            onChange={(e) => {\n              setTelefoneUser(e.target.value);\n            }}\n          />\n          <input\n            type=\"file\"\n            name=\"image\"\n            onChange={handleChange}\n            accept=\"image/*\"\n          />\n          <h3 className=\"departamento\">DEPARTAMENTO</h3>\n          <select\n            className=\"select\"\n            id=\"deptoUser\"\n            name=\"deptoUser\"\n            required\n            onChange={(e) => {\n              setDeptoUser(e.target.value);\n            }}\n          >\n            <option value=\"0\" name=\"nothing\" id=\"nothing\">\n              Nenhuma Selecionada\n            </option>\n            <option value=\"1\" name=\"AIP\" id=\"AIP\">\n              Aprendizagem Industrial Presencial\n            </option>\n            <option value=\"2\" name=\"GTP\" id=\"GTP\">\n              Graduação Tecnológica Presencial\n            </option>\n            <option value=\"3\" name=\"PGP\" id=\"PGP\">\n              Pós-Graduação Presencial\n            </option>\n            <option value=\"4\" name=\"EP\" id=\"EP\">\n              Extensão Presencial\n            </option>\n            <option value=\"5\" name=\"IPP\" id=\"IPP\">\n              Iniciação Profissional Presencial\n            </option>\n            <option value=\"6\" name=\"QPP\" id=\"QPP\">\n              Qualificação Profissional Presencial\n            </option>\n            <option value=\"7\" name=\"AEPP\" id=\"AEPP\">\n              Aperfeiç./Especializ. Profis. Presencial\n            </option>\n          </select>\n          <div className=\"btns\">\n            <input\n              type=\"submit\"\n              className=\"nu-button\"\n              id=\"btn\"\n              value=\"Enviar\"\n            />\n            <input\n              className=\"nu-button\"\n              id=\"btn\"\n              value=\"Voltar\"\n            />\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default NewUser;","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/pages/forgotPassword/index.js",[],"/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/pages/newPassword/index.js",["156"],"import React, { useState, useEffect } from 'react';\nimport '../../styles/newPassword.scss';\nimport { useLocation, useHistory } from 'react-router-dom'\nimport axios from \"axios\";\nimport queryString from 'query-string'\n\nimport LoginContainer from '../../components/loginContainer';\n\nexport default function NewPassword() {\n\n  //Acessando os valores da URL ?token=...&email=...\n  const pathName = useLocation().search;\n\n  //Inputs de senha \n  //  ==> ****Realizar verificação no front se ambas as senhas digitadas são iguais antes de enviar.\n  const [senhaInput, setSenhaInput] = useState(\"\");\n  const [senhaInput2, setSenhaInput2] = useState(\"\");\n\n  //Objetos que vão receber os valores fornecidos pela URL\n  const [values, setValues] = useState({\n    token: \"\",\n    email: \"\"\n  })\n\n  //UseState() => Usado para setar o status de envio e realizar alguma alteração em função disso \n  // (mudei o botão de enviar para a mensagem abaixo!)\n  const [enviado, setEnviado] = useState();\n\n  //UseState() => Mensagem que será definida quando a requisição for enviada\n  const [mensagem, setMensagem] = useState(\"\")\n\n  //Instanciando o useHistory para utilização na navegação do site\n  const history = useHistory();\n\n\n  //Função que realiza uma requisição na rota \"/reset-password\" enviando os valores de senha1 e 2, token e email fornecidos pela URL (enviado pelo email)\n  function NewPasswordPost() {\n    //Só envia a requisição se as senhas inseridas estiverem iguais.\n    if (senhaInput !== senhaInput2) {\n      setMensagem(`As senhas inseridas não coincidem!`)\n    }\n    else {\n      const data = { senha: senhaInput, senha2: senhaInput2, token: values.token, email: values.email };\n      axios.post(\"http://localhost:3002/reset-password\", data).then((result) => {\n        setEnviado(true)\n        setMensagem(result.data.message)\n        console.log(result)\n      })\n    }\n  }\n\n  //Função que executa os padrões de required do FORM do html e depois executa a nossa requisição (newPasswordPost)\n  const onSubmit = (e) => {\n    e.preventDefault();\n    NewPasswordPost();\n  }\n\n  //Aquilo que é carregado/executado sempre que a página é recarregada\n  useEffect(() => {\n    //Formatando valores passados pela URL em Objetos ( ?token= ... ?email= ...)\n    const values = queryString.parse(pathName)\n\n    //Acessando esses objetos e Setando esses valores para conseguir usar eles na requisição (axios)\n    setValues({\n      token: values.token,\n      email: values.email\n    })\n  },\n    // Importante para não virar um Loop\n    []);\n\n  return (\n    <div className=\"content\">\n      <LoginContainer />\n      <div className=\"container\">\n        <h2 id=\"h2\" className=\"np-subTitle\">Digite a sua nova senha</h2>\n\n        <form onSubmit={onSubmit}>\n          <input\n            id=\"new-senha\"\n            className=\"password-input-box\"\n            type=\"password\"\n            name=\"password1\"\n            onChange={(e) => {\n              setSenhaInput(e.target.value);\n            }}\n            placeholder=\"Senha\"\n            required\n          />\n          <input\n            id=\"new-senha2\"\n            className=\"password-input-box\"\n            type=\"password\"\n            name=\"password2\"\n            onChange={(e) => {\n              setSenhaInput2(e.target.value);\n            }}\n            placeholder=\"Senha\"\n            required\n          />\n\n          <div className=\"link-box\">\n          </div>\n\n\n          {/* Se o valor de enviado for true, ele muda o botão de enviar para o botão de voltar.\n              * importante: para usar o op. ternario, você deverá ter as mesmas tags no começo e final do operador,\n              por isso foi usado o <> </>. *\n          */}\n          {enviado ?\n            <>\n              <button id=\"forgot-password-button\" className=\"fp-button\" onClick={() => history.push(`/`)}>Voltar</button>\n            </>\n            :\n            <>\n              <input\n                id=\"new-password-button\"\n                className=\"np-button\"\n                name=\"new-password-button\"\n                type=\"submit\"\n                value=\"Enviar\" />\n            </>\n          }\n          {/* Mensagem que será personalizada dependendo do que houver, se for feita ou não uma requisição ou houver algum\n          tipo de erro */}\n          <h4>{mensagem}</h4>\n\n        </form>\n\n      </div>\n    </div>\n  );\n}","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/pages/requestFormC/index.js",[],"/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/pages/userInfo/index.js",["157"],"/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/pages/requestFormG/index.js",["158","159","160"],"import React, {useEffect, useContext} from 'react';\nimport { AuthContext } from './../../helpers/AuthContext';\nimport { useHistory } from 'react-router-dom'\nimport axios from 'axios';\n\nimport MenuG from '../../components/hamburgerButton';\n\nimport Header from '../../components/header';\nimport SideBarGerencia from '../../components/sidebarGerencia';\n\nimport Form from '../../components/form';\n\nfunction FormGerencia() {\n\n  const { setAuthState } = useContext(AuthContext);\n  var history = useHistory();\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:3002/auth\", {\n        headers: {\n          accessToken: localStorage.getItem(\"accessToken\"),\n        },\n      })\n      .then((response) => {\n        if (response.status == 500 || response.data.error) {\n          setAuthState({ status: false });\n          history.push('./')\n        }\n        else {\n          setAuthState({\n            nif: response.data.nif,\n            email: response.data.email,\n            nome: response.data.nome,\n            imagem: \"http://localhost:3002/\" + response.data.imagem,\n            roles: response.data.roles,\n            status: true\n          });\n          var resposta = response.data.roles.includes(\"3_ROLE_ADMIN\");\n          if (resposta == false) {\n            setAuthState({ status: false });\n            history.push('./notAuthorized')\n        }\n      }\n    })\n  }, []);\n  return (\n    <>\n      <MenuG />\n      <Header />\n      <SideBarGerencia />\n      <Form />\n    </>\n  );\n}\n\nexport default FormGerencia;\n","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/pages/management/index.js",["161","162","163"],"import React, {useEffect, useContext} from 'react';\nimport '../../styles/management.scss';\nimport { useHistory } from 'react-router-dom'\nimport axios from 'axios';\nimport { FaSearch } from 'react-icons/fa';\nimport { AuthContext } from './../../helpers/AuthContext';\nimport ManagerImg from '../../components/managerImg';\n\nimport MenuG from './../../components/hamburgerButtonG'\nimport Header from './../../components/header'\nimport SideBarGerencia from './../../components/sidebarGerencia'\n\nfunction Management () {\n  const { setAuthState } = useContext(AuthContext);\n  var history = useHistory();\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:3002/auth\", {\n        headers: {\n          accessToken: localStorage.getItem(\"accessToken\"),\n        },\n      })\n      .then((response) => {\n        if (response.status == 500 || response.data.error) {\n          setAuthState({ status: false });\n          history.push('./')\n        }\n        else {\n          setAuthState({\n            nif: response.data.nif,\n            email: response.data.email,\n            nome: response.data.nome,\n            imagem: \"http://localhost:3002/\" + response.data.imagem,\n            roles: response.data.roles,\n            status: true\n          });\n          var resposta = response.data.roles.includes(\"3_ROLE_ADMIN\");\n          if (resposta == false) {\n            setAuthState({ status: false });\n            history.push('./notAuthorized')\n        }\n      }\n    })\n  }, []);\n\n\n  return (\n    <>\n      <MenuG />\n      <Header />\n      <SideBarGerencia />\n\n      <div className=\"container-management\">\n        <div className=\"management\">\n          <h1 className=\"management-title\">Gerência de Usuários</h1>\n          <label htmlFor=\"search\">\n            <input\n              type=\"search\"\n              name=\"search\"\n              id=\"search\"\n              placeholder=\"Filtro\"\n            />\n          </label>\n          <FaSearch className=\"icon-management\" />\n        </div>\n        <div className=\"section\">\n          <ManagerImg />\n\n          <input className=\"input-management\" type=\"text\" placeholder=\"Nome\" />\n          <input\n            className=\"input-management\"\n            type=\"email\"\n            placeholder=\"Email\"\n          />\n          <input\n            className=\"input-management nif\"\n            type=\"number\"\n            placeholder=\"NIF\"\n          />\n          <input\n            className=\"input-management dp\"\n            type=\"text\"\n            placeholder=\"Departamento\"\n          />\n          <input\n            className=\"input-management cfp\"\n            type=\"number\"\n            placeholder=\"CFP\"\n          />\n          <input\n            className=\"input-management tel\"\n            type=\"text\"\n            placeholder=\"TEL\"\n          />\n\n          <div className=\"btn-management\">\n            <button className=\"btn-management-E\">Editar</button>\n            <button className=\"btn-management-D\">Apagar</button>\n          </div>\n        </div>\n        <div className=\"section\">\n          <ManagerImg />\n\n          <input className=\"input-management\" type=\"text\" placeholder=\"Nome\" />\n          <input\n            className=\"input-management\"\n            type=\"email\"\n            placeholder=\"Email\"\n          />\n          <input\n            className=\"input-management nif\"\n            type=\"number\"\n            placeholder=\"NIF\"\n          />\n          <input\n            className=\"input-management dp\"\n            type=\"text\"\n            placeholder=\"Departamento\"\n          />\n          <input\n            className=\"input-management cfp\"\n            type=\"number\"\n            placeholder=\"CFP\"\n          />\n          <input\n            className=\"input-management tel\"\n            type=\"text\"\n            placeholder=\"TEL\"\n          />\n          <div className=\"btn-management\">\n            <button className=\"btn-management-E\">Editar</button>\n            <button className=\"btn-management-D\">Apagar</button>\n          </div>\n        </div>\n        <div className=\"section\">\n          <ManagerImg />\n\n          <input className=\"input-management\" type=\"text\" placeholder=\"Nome\" />\n          <input\n            className=\"input-management\"\n            type=\"email\"\n            placeholder=\"Email\"\n          />\n          <input\n            className=\"input-management nif\"\n            type=\"number\"\n            placeholder=\"NIF\"\n          />\n          <input\n            className=\"input-management dp\"\n            type=\"text\"\n            placeholder=\"Departamento\"\n          />\n          <input\n            className=\"input-management cfp\"\n            type=\"number\"\n            placeholder=\"CFP\"\n          />\n          <input\n            className=\"input-management tel\"\n            type=\"text\"\n            placeholder=\"TEL\"\n          />\n          <div className=\"btn-management\">\n            <button className=\"btn-management-E\">Editar</button>\n            <button className=\"btn-management-D\">Apagar</button>\n          </div>\n        </div>\n        <div className=\"btn-newUser\">\n          <button>Criar novo usuário</button>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Management;\n","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/pages/login/index.js",["164","165"],"import React, { useCallback, useContext, useState, useEffect } from 'react';\nimport '../../styles/login.scss';\nimport axios from \"axios\";\nimport { useHistory } from \"react-router\";\nimport { AuthContext } from './../../helpers/AuthContext';\n\nimport LoginContainer from '../../components/loginContainer'\n\nexport default function Login() {\n  const [emailOrNif, setEmailOrNif] = useState(\"\");\n  const [senha, setSenha] = useState(\"\");\n  const { setAuthState } = useContext(AuthContext);\n\n  const [mensagem, setMensagem] = useState(\"\")\n\n  let history = useHistory();\n\n  const LoginPost = () => {\n    const data = { emailOrNif: emailOrNif, senha: senha };\n    axios.post(\"http://localhost:3002/logar\", data).then((result) => {\n      console.log(result)\n      if (result.data.error) {\n        setMensagem(result.data.error)\n      }\n      else {\n        setAuthState({\n          nif: result.data.nif,\n          nome: result.data.nome,\n          roles: result.data.roles,\n          status: true\n        });\n        localStorage.setItem(\"accessToken\", result.data.accessToken);\n\n        var resposta = result.data.roles.includes(\"3_ROLE_ADMIN\");\n\n        if (resposta === true) {\n          history.push('management')\n        } else {\n          history.push('requestFormC')\n        }\n      }\n    });\n  };\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:3002/auth\", {\n        headers: {\n          accessToken: localStorage.getItem(\"accessToken\"),\n        },\n        validateStatus: () => true\n      })\n      .then((response) => {\n        if (response.data.roles) {\n          var resposta = response.data.roles.includes(\"3_ROLE_ADMIN\");\n\n          if (resposta === true) {\n            history.push('management')\n          } else {\n            history.push('requestFormC')\n          }\n        }\n      }\n      )\n  }, []);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    LoginPost();\n  }\n\n\n  return (\n    <>\n      <div className=\"content\">\n        <LoginContainer />\n        <div className=\"container\">\n          <h2 id=\"h2\" className=\"login-subTitle\">Login</h2>\n\n          <form onSubmit={onSubmit}>\n            <input\n              id=\"email\"\n              className=\"login-input-box\"\n              type=\"text\"\n              name=\"email\"\n              onChange={(e) => {\n                setEmailOrNif(e.target.value);\n              }}\n              placeholder=\"E-mail ou NIF\"\n              required\n            />\n            <input\n              id=\"password\"\n              className=\"login-input-box\"\n              type=\"password\"\n              name=\"senha\"\n              onChange={(e) => {\n                setSenha(e.target.value);\n              }}\n              placeholder=\"Senha\"\n              required\n            />\n\n            <div className=\"link-box\">\n              <p className=\"newPassword\" onClick={() => history.push(`/forgotPassword`)}>Esqueci a senha</p>\n            </div>\n\n            <input\n              id=\"login-button\"\n              className=\"login-button\"\n              name=\"login-button\"\n              type=\"submit\"\n              value=\"Entrar\" />\n          </form>\n          <h4>{mensagem}</h4>\n        </div>\n      </div>\n    </>\n  );\n}","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/pages/review/index.js",[],"/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/pages/historyAdmin/index.js",["166","167","168"],"import React, {useEffect, useContext} from 'react';\nimport { AuthContext } from './../../helpers/AuthContext';\nimport { useHistory } from 'react-router-dom'\nimport axios from 'axios';\nimport '../../styles/historyAdmin.scss';\n\nimport Header from '../../components/header';\nimport SideBarGerencia from '../../components/sidebarGerencia';\n\nimport MenuG from '../../components/hamburgerButtonG';\n\nfunction HistoryAdmin () {\n  const { setAuthState } = useContext(AuthContext);\n  var history = useHistory();\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:3002/auth\", {\n        headers: {\n          accessToken: localStorage.getItem(\"accessToken\"),\n        },\n      })\n      .then((response) => {\n        if (response.status == 500 || response.data.error) {\n          setAuthState({ status: false });\n          history.push('./')\n        }\n        else {\n          setAuthState({\n            nif: response.data.nif,\n            email: response.data.email,\n            nome: response.data.nome,\n            imagem: \"http://localhost:3002/\" + response.data.imagem,\n            roles: response.data.roles,\n            status: true\n          });\n          var resposta = response.data.roles.includes(\"3_ROLE_ADMIN\");\n          if (resposta == false) {\n            setAuthState({ status: false });\n            history.push('./notAuthorized')\n        }\n      }\n    })\n  }, []);\n  \n  return (\n    <>\n      <MenuG />\n      <Header />\n      <SideBarGerencia />\n\n      <div className=\"container-history-admin\">\n        <div className=\"history-admin-title\">\n          <h1>Histórico</h1>\n        </div>\n\n        <div className=\"div-search\">\n          <input\n            type=\"search\"\n            className=\"search-user\"\n            placeholder=\"Pesquisar Usuários\"\n          />\n        </div>\n\n        <div className=\"div-itens-admin\">\n          <div className=\"history-admin-item\">\n            ID= 1 | Funcionário | Titulo da Reprografia | Total: R$50\n            <div className=\"btns-admin\">\n              <button className=\"btn-details-admin\">Detalhes</button>\n            </div>\n          </div>\n          <div className=\"history-admin-item\">\n            ID= 1 | Funcionário | Titulo da Reprografia | Total: R$50\n            <div className=\"btns-admin\">\n              <button className=\"btn-details-admin\">Detalhes</button>\n            </div>\n          </div>\n          <div className=\"history-admin-item\">\n            ID= 1 | Funcionário | Titulo da Reprografia | Total: R$50\n            <div className=\"btns-admin\">\n              <button className=\"btn-details-admin\">Detalhes</button>\n            </div>\n          </div>\n          <div className=\"history-admin-item\">\n            ID= 1 | Funcionário | Titulo da Reprografia | Total: R$50\n            <div className=\"btns-admin\">\n              <button className=\"btn-details-admin\">Detalhes</button>\n            </div>\n          </div>\n          <div className=\"history-admin-item\">\n            ID= 1 | Funcionário | Titulo da Reprografia | Total: R$50\n            <div className=\"btns-admin\">\n              <button className=\"btn-details-admin\">Detalhes</button>\n            </div>\n          </div>\n          <div className=\"history-admin-item\">\n            ID= 1 | Funcionário | Titulo da Reprografia | Total: R$50\n            <div className=\"btns-admin\">\n              <button className=\"btn-details-admin\">Detalhes</button>\n            </div>\n          </div>\n          <div className=\"history-admin-item\">\n            ID= 1 | Funcionário | Titulo da Reprografia | Total: R$50\n            <div className=\"btns-admin\">\n              <button className=\"btn-details-admin\">Detalhes</button>\n            </div>\n          </div>\n          <div className=\"history-admin-item\">\n            ID= 1 | Funcionário | Titulo da Reprografia | Total: R$50\n            <div className=\"btns-admin\">\n              <button className=\"btn-details-admin\">Detalhes</button>\n            </div>\n          </div>\n          <div className=\"history-admin-item\">\n            ID= 1 | Funcionário | Titulo da Reprografia | Total: R$50\n            <div className=\"btns-admin\">\n              <button className=\"btn-details-admin\">Detalhes</button>\n            </div>\n          </div>\n          <div className=\"history-admin-item\">\n            ID= 1 | Funcionário | Titulo da Reprografia | Total: R$50\n            <div className=\"btns-admin\">\n              <button className=\"btn-details-admin\">Detalhes</button>\n            </div>\n          </div>\n          <div className=\"history-admin-item\">\n            ID= 1 | Funcionário | Titulo da Reprografia | Total: R$50\n            <div className=\"btns-admin\">\n              <button className=\"btn-details-admin\">Detalhes</button>\n            </div>\n          </div>\n          <div className=\"history-admin-item\">\n            ID= 1 | Funcionário | Titulo da Reprografia | Total: R$50\n            <div className=\"btns-admin\">\n              <button className=\"btn-details-admin\">Detalhes</button>\n            </div>\n          </div>\n          <div className=\"history-admin-item\">\n            ID= 1 | Funcionário | Titulo da Reprografia | Total: R$50\n            <div className=\"btns-admin\">\n              <button className=\"btn-details-admin\">Detalhes</button>\n            </div>\n          </div>\n          <div className=\"history-admin-item\">\n            ID= 1 | Funcionário | Titulo da Reprografia | Total: R$50\n            <div className=\"btns-admin\">\n              <button className=\"btn-details-admin\">Detalhes</button>\n            </div>\n          </div>\n          <div className=\"history-admin-item\">\n            ID= 1 | Funcionário | Titulo da Reprografia | Total: R$50\n            <div className=\"btns-admin\">\n              <button className=\"btn-details-admin\">Detalhes</button>\n            </div>\n          </div>\n          <div className=\"history-admin-item\">\n            ID= 1 | Funcionário | Titulo da Reprografia | Total: R$50\n            <div className=\"btns-admin\">\n              <button className=\"btn-details-admin\">Detalhes</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default HistoryAdmin;","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/pages/statistics/index.js",["169","170","171"],"import React, {useEffect, useContext} from 'react';\nimport '../../styles/statistics.scss';\nimport { Pie, Bar, Doughnut } from \"react-chartjs-2\";\nimport { AuthContext } from './../../helpers/AuthContext';\nimport { useHistory } from 'react-router-dom'\nimport axios from 'axios';\n\nimport Header from \"../../components/header\";\nimport SideBarGerencia from \"../../components/sidebarGerencia\";\nimport MenuG from \"../../components/hamburgerButtonG\";\n\nconst Statistics = () => {\n  const { setAuthState } = useContext(AuthContext);\n  var history = useHistory()\n  \n  useEffect(() => {\n    axios\n      .get(\"http://localhost:3002/auth\", {\n        headers: {\n          accessToken: localStorage.getItem(\"accessToken\"),\n        },\n      })\n      .then((response) => {\n        if (response.status == 500 || response.data.error) {\n          setAuthState({ status: false });\n          history.push('./')\n        }\n        else {\n          setAuthState({\n            nif: response.data.nif,\n            email: response.data.email,\n            nome: response.data.nome,\n            imagem: \"http://localhost:3002/\" + response.data.imagem,\n            roles: response.data.roles,\n            status: true\n          });\n          var resposta = response.data.roles.includes(\"3_ROLE_ADMIN\");\n          if (resposta == false) {\n            setAuthState({ status: false });\n            history.push('./notAuthorized')\n        }\n      }\n    })\n  }, []);\n\n  return (\n    <>\n      <MenuG />\n      <Header />\n      <SideBarGerencia />\n      \n      <div className=\"statistics-container\">\n        <div className=\"statistics-title\">\n          <h1>Estatísticas Gerais</h1>\n        </div>\n\n        <div className=\"statistics\">\n          <section className=\"line1\">\n            <div className=\"cards\">\n              <h4 className=\"statics-subtitle\" >Total de cópias mensais</h4>\n              <BarChart />\n            </div>\n            <div className=\"cards\">\n              <h4 className=\"statics-subtitle\" >Cores</h4>\n              <PieChart />\n            </div>\n            <div className=\"cards\">\n              <h4 className=\"statics-subtitle\" >Custos</h4>\n              <BarChart2 />\n            </div>\n          </section>\n\n          <section className=\"line2\">\n            <div className=\"cards2\">\n            <h4 className=\"statics-subtitle\" >Cópias e encadernações</h4>\n              <PieChart2 />\n            </div>\n            <div className=\"cards2\">\n              <h4 className=\"statics-subtitle\" >Departamentos que mais solicitam</h4>\n              <DoughnutChart />\n            </div>\n            <div className=\"cards2\">\n              <h4 className=\"statics-subtitle\" >Cursos que mais solicitam</h4>\n              <PieChart3 />\n            </div>\n          </section>\n        </div>\n      </div>\n    </>\n  );\n}\n\nconst BarChart = () => {\n  const state = {\n    labels: [\"Janeiro\", \"Fevereiro\", \"Março\", \"Abril\", \"Maio\", \"Junho\", \"Julho\", \"Agosto\", \"Setembro\", \"Outubro\", \"Novembro\", \"Dezembro\"],\n    datasets: [{\n      label: 'Cópias Mensais',\n      data: [65, 59, 80, 81, 56, 55, 40, 38, 30, 21, 14, 2],\n      backgroundColor: [\n        'rgba(6, 90, 158, 0.527)'\n      ],\n      borderColor: [\n        'rgba(11, 67, 112, 0.527)'\n      ],\n      borderWidth: 1,\n    }],\n  }\n  return (\n    <div>\n      <Bar data={state} id=\"monthly-copys\" width=\"210\" height=\"105\" />\n    </div>\n  );\n}\n\nconst PieChart = () => {\n  const state = {\n    labels: ['Cópias Coloridas', 'Cópias P&B'],\n    datasets: [{\n      data: [20, 80],\n      backgroundColor: [\n        'rgba(213, 81, 253, 0.822)',\n        'rgba(181, 72, 214, 0.904)'\n      ],\n      borderColor: [\n        'rgba(141, 141, 141, 0.562)'\n      ],\n      hoverOffset: 4,\n    }]\n  }\n  return (\n    <div>\n      <Pie data={state} id=\"pages-colors\" width=\"180\" height=\"105\" />\n    </div>\n  );\n}\n\nconst BarChart2 = () => {\n  const state = {\n    labels: [\"Janeiro\", \"Fevereiro\", \"Março\", \"Abril\", \"Maio\", \"Junho\", \"Julho\", \"Agosto\", \"Setembro\", \"Outubro\", \"Novembro\", \"Dezembro\"],\n    datasets: [{\n      label: 'Total de Custos',\n      data: [43, 71, 80, 14, 26, 55, 40, 38, 18, 21, 38, 20],\n      backgroundColor: [\n        'rgba(3, 194, 153, 0.541)'\n      ],\n      borderColor: [\n        'rgba(9, 194, 103, 0.999)'\n      ],\n      borderWidth: 1,\n    }]\n  }\n  return (\n    <div>\n      <Bar data={state} id=\"total-cost\" width=\"210\" height=\"105\" />\n    </div>\n  );\n}\n\nconst PieChart2 = () => {\n  const state = {\n    labels: ['Cópias', 'Encadernações'],\n    datasets: [{\n      data: [60, 40],\n      backgroundColor: [\n        'rgba(236, 217, 39, 0.986)',\n        'rgba(231, 178, 33, 0.986)'\n      ],\n      borderColor: [\n        'rgba(141, 141, 141, 0.562)'\n      ],\n      hoverOffset: 4,\n    }]\n  }\n  return (\n    <div>\n      <Pie data={state} id=\"copy-binding\" width=\"180\" height=\"105\" />\n    </div>\n  );\n}\n\nconst DoughnutChart = () => {\n  const state = {\n    labels: [\n      'Informática', 'Mecânica', 'Redes'\n    ],\n    datasets: [{\n      data: [300, 200, 500],\n      backgroundColor: [\n        'rgba(241, 94, 26, 0.733)',\n        'rgba(240, 150, 108, 0.829)',\n        'rgba(207, 107, 61, 0.829)'\n      ],\n      borderColor: [\n        'rgba(141, 141, 141, 0.562)'\n      ],\n      hoverOffset: 4\n    }],\n  }\n  return (\n    <div>\n      <Doughnut data={state} id=\"department-request\" width=\"150\" height=\"105\" />\n    </div>\n  );\n}\n\nconst PieChart3 = () => {\n  const state = {\n    labels: ['CAI', 'CT', 'FC', 'CST'],\n    datasets: [{\n      data: [30, 20, 30, 40],\n      backgroundColor: [\n        'rgba(245, 45, 128, 0.986)',\n        'rgba(253, 38, 164, 0.986)',\n        'rgba(247, 77, 176, 0.986)',\n        'rgba(255, 136, 205, 0.986)'\n      ],\n      borderColor: [\n        'rgba(141, 141, 141, 0.562)'\n      ],\n      hoverOffset: 4,\n    }]\n  }\n  return (\n    <div>\n      <Pie data={state} id=\"course-request\" width=\"180\" height=\"105\" />\n    </div>\n  );\n}\n\nexport default Statistics;","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/pages/historyDefault/index.js",[],"/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/components/loginContainer/index.js",[],"/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/components/newUserContainer/index.js",["172"],"import React from 'react';\nimport './styles.scss';\nimport Profile from '../img/profile.js';\n\nfunction NewUserContainer () {\n    return(\n        <div className=\"left-container\" >\n            <div className=\"icon-container\" >\n            <img className=\"profile-image\" src=\"assets/img/usuario.png\" id=\"profile-image\" name=\"profile-image\" alt=\"imagem de perfil\"/>\n            </div>\n            <h2 className=\"subTitle\">Novo Usuário</h2>\n        </div>\n    );\n}\n\nexport default NewUserContainer;","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/components/hamburgerButton/index.js",[],"/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/components/header/index.js",["173"],"import React from 'react';\nimport './styles.scss';\nimport { FaHome } from 'react-icons/fa';\nimport { FaUserAlt } from 'react-icons/fa';\nimport { FaSignOutAlt } from 'react-icons/fa';\nimport { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport { useHistory } from \"react-router\";\n\n\nimport Logo from '../img/logo';\n\nfunction Header () {\n  const history = useHistory();\n\n  const [authState, setAuthState] = useState({\n    email: \"\",\n    nif: 0,\n    status: false,\n  });\n\n  useEffect(() => {\n    axios.get(\"http://localhost:3002/auth/\", {\n        headers: {\n          accessToken: localStorage.getItem(\"accessToken\"),\n        },\n      })\n      .then((response) => {\n        if (response.data.error) {\n          setAuthState({ ...authState, status: false });\n        } else {\n          setAuthState({\n            email: response.data.email,\n            nif: response.data.id,\n            status: true,\n          });\n        }\n      });\n  }, []);\n\n  const routeUi = () => {\n    history.push('/userInfo')\n  }\n\n  const logout = () => {\n    localStorage.removeItem(\"accessToken\");\n    setAuthState(false);\n    history.push('/')\n  }; \n  \n  \n  return (\n    <header>\n      <Logo />\n      {/* <img src={`http://localhost:3002` + imagem}  /> */}\n      <div className=\"icons\">\n        <FaHome className=\"icon\" />\n        <FaUserAlt className=\"icon\" onClick={routeUi} />\n        <FaSignOutAlt className=\"icon\" onClick={logout} />\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/components/sidebarColaborador/index.js",[],"/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/components/profileContainer/index.js",["174"],"/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/components/form/index.js",[],"/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/components/sidebarGerencia/index.js",[],"/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/components/managerImg/index.js",["175"],"import React from 'react';\nimport './styles.scss';\n\nfunction ManagerImg() {\n  return (\n    <>\n      <div className=\"img-container\">\n        <img src=\"assets/img/user3.png\" className=\"user-img\" />\n      </div>\n    </>\n  );\n}\n\nexport default ManagerImg;\n","/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/components/hamburgerButtonG/index.js",[],"/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/components/img/profile.js",[],"/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/components/hamburgerButton/SidebarData.js",[],"/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/components/hamburgerButtonG/SidebarData.js",[],"/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/components/img/repo.js",[],"/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/components/img/logo.js",[],"/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/pages/myRequests/index.js",["176"],"/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/pages/detPedido/index.js",["177"],"import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\n\nexport default function DetPedido() {\n    var { id } = useParams();\n\n    var [message, setMessage] = useState();\n\n    useEffect(() => {\n        axios\n            .get(\"http://localhost:3002/detPedido/\" + id, {\n                headers: {\n                    accessToken: localStorage.getItem(\"accessToken\"),\n                },\n            }).then((result) => {\n                console.log(result)\n                if(result.data.error){\n                    setMessage(result.data.error)\n                }\n                else { setMessage(result.data.message) }\n            })\n        }, [])\n\n\n        return (\n            <>\n            <h1>{message}</h1>\n            </>\n        )\n}\n\n",{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","severity":1,"message":"183","line":2,"column":50,"nodeType":"184","messageId":"185","endLine":2,"endColumn":60},{"ruleId":"182","severity":1,"message":"186","line":18,"column":10,"nodeType":"184","messageId":"185","endLine":18,"endColumn":25},{"ruleId":"187","severity":1,"message":"188","line":41,"column":6,"nodeType":"189","endLine":41,"endColumn":8,"suggestions":"190"},{"ruleId":"187","severity":1,"message":"191","line":70,"column":5,"nodeType":"189","endLine":70,"endColumn":7,"suggestions":"192"},{"ruleId":"182","severity":1,"message":"193","line":70,"column":9,"nodeType":"184","messageId":"185","endLine":70,"endColumn":22},{"ruleId":"194","severity":1,"message":"195","line":26,"column":29,"nodeType":"196","messageId":"197","endLine":26,"endColumn":31},{"ruleId":"194","severity":1,"message":"195","line":40,"column":24,"nodeType":"196","messageId":"197","endLine":40,"endColumn":26},{"ruleId":"187","severity":1,"message":"188","line":46,"column":6,"nodeType":"189","endLine":46,"endColumn":8,"suggestions":"198"},{"ruleId":"194","severity":1,"message":"195","line":25,"column":29,"nodeType":"196","messageId":"197","endLine":25,"endColumn":31},{"ruleId":"194","severity":1,"message":"195","line":39,"column":24,"nodeType":"196","messageId":"197","endLine":39,"endColumn":26},{"ruleId":"187","severity":1,"message":"188","line":45,"column":6,"nodeType":"189","endLine":45,"endColumn":8,"suggestions":"199"},{"ruleId":"182","severity":1,"message":"200","line":1,"column":17,"nodeType":"184","messageId":"185","endLine":1,"endColumn":28},{"ruleId":"187","severity":1,"message":"201","line":65,"column":6,"nodeType":"189","endLine":65,"endColumn":8,"suggestions":"202"},{"ruleId":"194","severity":1,"message":"195","line":24,"column":29,"nodeType":"196","messageId":"197","endLine":24,"endColumn":31},{"ruleId":"194","severity":1,"message":"195","line":38,"column":24,"nodeType":"196","messageId":"197","endLine":38,"endColumn":26},{"ruleId":"187","severity":1,"message":"188","line":44,"column":6,"nodeType":"189","endLine":44,"endColumn":8,"suggestions":"203"},{"ruleId":"194","severity":1,"message":"195","line":24,"column":29,"nodeType":"196","messageId":"197","endLine":24,"endColumn":31},{"ruleId":"194","severity":1,"message":"195","line":38,"column":24,"nodeType":"196","messageId":"197","endLine":38,"endColumn":26},{"ruleId":"187","severity":1,"message":"188","line":44,"column":6,"nodeType":"189","endLine":44,"endColumn":8,"suggestions":"204"},{"ruleId":"182","severity":1,"message":"205","line":3,"column":8,"nodeType":"184","messageId":"185","endLine":3,"endColumn":15},{"ruleId":"187","severity":1,"message":"206","line":39,"column":6,"nodeType":"189","endLine":39,"endColumn":8,"suggestions":"207"},{"ruleId":"182","severity":1,"message":"205","line":3,"column":8,"nodeType":"184","messageId":"185","endLine":3,"endColumn":15},{"ruleId":"208","severity":1,"message":"209","line":8,"column":9,"nodeType":"210","endLine":8,"endColumn":64},{"ruleId":"182","severity":1,"message":"211","line":1,"column":38,"nodeType":"184","messageId":"185","endLine":1,"endColumn":48},{"ruleId":"187","severity":1,"message":"212","line":23,"column":12,"nodeType":"189","endLine":23,"endColumn":14,"suggestions":"213"},"no-native-reassign",["214"],"no-negated-in-lhs",["215"],"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'isAuthenticated' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'setAuthState'. Either include them or remove the dependency array.","ArrayExpression",["216"],"React Hook useEffect has a missing dependency: 'pathName'. Either include it or remove the dependency array.",["217"],"'routeUserInfo' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["218"],["219"],"'useCallback' is defined but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["220"],["221"],["222"],"'Profile' is defined but never used.","React Hook useEffect has a missing dependency: 'authState'. Either include it or remove the dependency array. You can also do a functional update 'setAuthState(a => ...)' if you only need 'authState' in the 'setAuthState' call.",["223"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useContext' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["224"],"no-global-assign","no-unsafe-negation",{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},{"desc":"225","fix":"229"},{"desc":"225","fix":"230"},{"desc":"231","fix":"232"},{"desc":"225","fix":"233"},{"desc":"225","fix":"234"},{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},"Update the dependencies array to be: [history, setAuthState]",{"range":"239","text":"240"},"Update the dependencies array to be: [pathName]",{"range":"241","text":"242"},{"range":"243","text":"240"},{"range":"244","text":"240"},"Update the dependencies array to be: [history]",{"range":"245","text":"246"},{"range":"247","text":"240"},{"range":"248","text":"240"},"Update the dependencies array to be: [authState]",{"range":"249","text":"250"},"Update the dependencies array to be: [id]",{"range":"251","text":"252"},[1282,1284],"[history, setAuthState]",[2514,2516],"[pathName]",[1374,1376],[1468,1470],[1814,1816],"[history]",[1373,1375],[1425,1427],[955,957],"[authState]",[712,714],"[id]"]