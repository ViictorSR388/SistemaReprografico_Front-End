{"ast":null,"code":"var _jsxFileName = \"/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/pages/forgotPassword/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useHistory } from \"react-router\";\nimport LoginContainer from '../../components/loginContainer';\nimport '../../styles/forgotPassword.scss';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ForgotPassword() {\n  _s();\n\n  //Input de email, também usamos esse valor para definir a mensagem personalizada.\n  const [email, setEmail] = useState(\"\"); //UseState() => Mensagem que será definida quando a requisição for enviada (começa com o valor abaixo...)\n\n  const [mensagem, setMensagem] = useState(\"Um link será enviado ao seu e-mail para a recuperação de senha\"); //UseState() => Usado para setar o status de envio e realizar alguma alteração em função disso \n\n  const [enviado, setEnviado] = useState(); //Instanciando o useHistory para utilização na navegação do site\n\n  const history = useHistory();\n\n  const ForgotPasswordPost = () => {\n    //Se o input do email estiver vázio ele seta um valor para a mensagem.\n    if (email === '') {\n      setMensagem(\"Insira um email!\");\n    } //Se não, ele faz a requisição POST na rota (/forgot-password) setando o status de envio como true e a mensagem com\n    // o valor abaixo.\n    else {\n        const data = {\n          mail: email\n        };\n        axios.post(\"http://localhost:3002/forgot-password/\", data).then(response => {\n          //Retorna o valor de \"enviado\" como TRUE => Serve para usarmos na parte do operador ternário (trocar o botão por mensagem\n          // se for true, por exemplo...)\n          setEnviado(true); //Valor setado para \"mensagem\"\n\n          setMensagem(`Se esse email pertencer a alguma conta, será enviado um email de recuperação para: ${email}`);\n        });\n      }\n  }; //Função que executa os padrões de required do FORM do html e depois executa a nossa requisição (newPasswordPost)\n\n\n  const onSubmit = e => {\n    e.preventDefault();\n    ForgotPasswordPost();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(LoginContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        id: \"h2\",\n        className: \"fp-subTitle\",\n        children: \"Insira o seu e-mail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"email\",\n          type: \"email\",\n          className: \"email-input-box\",\n          name: \"email\",\n          onChange: e => {\n            setEmail(e.target.value);\n          },\n          placeholder: \"E-mail\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), enviado ? /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"forgot-password-button\",\n          className: \"fp-button\",\n          onClick: () => history.push(`/`),\n          children: \"Voltar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 22\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            id: \"forgot-password-button\",\n            className: \"fp-button\",\n            name: \"forgot-password-button\",\n            onClick: ForgotPasswordPost // Tirar duvidas sobre esse botão de login (VERIFICAR com o back)\n            ,\n            value: \"Enviar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"fp-button\",\n            onClick: () => history.push(`/`),\n            children: \"Voltar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: mensagem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ForgotPassword, \"oxIBL2iX54S9iBza9NZb6bN+qoI=\", false, function () {\n  return [useHistory];\n});\n\n_c = ForgotPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"sources":["/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/pages/forgotPassword/index.js"],"names":["React","useState","useHistory","LoginContainer","axios","ForgotPassword","email","setEmail","mensagem","setMensagem","enviado","setEnviado","history","ForgotPasswordPost","data","mail","post","then","response","onSubmit","e","preventDefault","target","value","push"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useHistory } from \"react-router\";\nimport LoginContainer from '../../components/loginContainer';\nimport '../../styles/forgotPassword.scss';\nimport axios from \"axios\";\n\nexport default function ForgotPassword() {\n\n  //Input de email, também usamos esse valor para definir a mensagem personalizada.\n  const [email, setEmail] = useState(\"\");\n  \n  //UseState() => Mensagem que será definida quando a requisição for enviada (começa com o valor abaixo...)\n  const [mensagem, setMensagem] = useState(\"Um link será enviado ao seu e-mail para a recuperação de senha\")\n\n  //UseState() => Usado para setar o status de envio e realizar alguma alteração em função disso \n  const [enviado, setEnviado] = useState();\n\n  //Instanciando o useHistory para utilização na navegação do site\n  const history = useHistory();\n\n  const ForgotPasswordPost = () => {\n    //Se o input do email estiver vázio ele seta um valor para a mensagem.\n    if (email === '') {\n      setMensagem(\"Insira um email!\")\n    }\n\n    //Se não, ele faz a requisição POST na rota (/forgot-password) setando o status de envio como true e a mensagem com\n    // o valor abaixo.\n    else {\n      const data = { mail: email };\n      axios.post(\"http://localhost:3002/forgot-password/\", data).then((response) => {\n\n        //Retorna o valor de \"enviado\" como TRUE => Serve para usarmos na parte do operador ternário (trocar o botão por mensagem\n        // se for true, por exemplo...)\n        setEnviado(true)\n\n        //Valor setado para \"mensagem\"\n        setMensagem(`Se esse email pertencer a alguma conta, será enviado um email de recuperação para: ${email}`)\n      });\n    }\n  }\n\n  //Função que executa os padrões de required do FORM do html e depois executa a nossa requisição (newPasswordPost)\n  const onSubmit = e => {\n    e.preventDefault();\n    ForgotPasswordPost();\n  }\n\n  return (\n    <div className=\"content\">\n      <LoginContainer />\n      <div className=\"container\">\n        <h2 id=\"h2\" className=\"fp-subTitle\">Insira o seu e-mail</h2>\n\n        <form onSubmit={onSubmit}>\n          <input\n            id=\"email\"\n            type=\"email\"\n            className=\"email-input-box\"\n            name=\"email\"\n            onChange={(e) => {\n              setEmail(e.target.value);\n            }}\n            placeholder=\"E-mail\"\n            required\n          />\n          {enviado ? <button id=\"forgot-password-button\" className=\"fp-button\" onClick={() => history.push(`/`)}>Voltar</button>\n            : <> <input\n              type=\"submit\"\n              id=\"forgot-password-button\"\n              className=\"fp-button\"\n              name=\"forgot-password-button\"\n              onClick={ForgotPasswordPost} // Tirar duvidas sobre esse botão de login (VERIFICAR com o back)\n              value=\"Enviar\"\n            />\n              <button className=\"fp-button\" onClick={() => history.push(`/`)}>Voltar</button>\n            </>\n          }\n        </form>\n        {/* Mensagem que será personalizada dependendo do que houver, se for feita ou não uma requisição ou houver algum\n        tipo de erro */}\n        <h4>{mensagem}</h4>\n      </div>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}