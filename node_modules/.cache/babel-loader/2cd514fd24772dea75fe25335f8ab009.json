{"ast":null,"code":"var _jsxFileName = \"/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/pages/newPassword/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport '../../styles/newPassword.scss';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport axios from \"axios\";\nimport queryString from 'query-string';\nimport LoginContainer from '../../components/loginContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function NewPassword() {\n  _s();\n\n  //Acessando os valores da URL ?token=...&email=...\n  const pathName = useLocation().search; //Inputs de senha \n  //  ==> ****Realizar verificação no front se ambas as senhas digitadas são iguais antes de enviar.\n\n  const [senhaInput, setSenhaInput] = useState(\"\");\n  const [senhaInput2, setSenhaInput2] = useState(\"\"); //Objetos que vão receber os valores fornecidos pela URL\n\n  const [values, setValues] = useState({\n    token: \"\",\n    email: \"\"\n  }); //UseState() => Usado para setar o status de envio e realizar alguma alteração em função disso \n  // (mudei o botão de enviar para a mensagem abaixo!)\n\n  const [enviado, setEnviado] = useState(); //UseState() => Mensagem que será definida quando a requisição for enviada\n\n  const [mensagem, setMensagem] = useState(\"\"); //Instanciando o useHistory para utilização na navegação do site\n\n  const history = useHistory(); //Função que realiza uma requisição na rota \"/reset-password\" enviando os valores de senha1 e 2, token e email fornecidos pela URL (enviado pelo email)\n\n  function NewPasswordPost() {\n    //Só envia a requisição se as senhas inseridas estiverem iguais.\n    if (senhaInput !== senhaInput2) {\n      setMensagem(`As senhas inseridas não coincidem!`);\n    } else {\n      const data = {\n        senha: senhaInput,\n        senha2: senhaInput2,\n        token: values.token,\n        email: values.email\n      };\n      axios.post(\"http://localhost:3002/reset-password\", data).then(result => {\n        setEnviado(true);\n        setMensagem(result.data.message);\n      });\n      console.log(mensagem);\n    }\n  } //Função que executa os padrões de required do FORM do html e depois executa a nossa requisição (newPasswordPost)\n\n\n  const onSubmit = e => {\n    e.preventDefault();\n    NewPasswordPost();\n  }; //Aquilo que é carregado/executado sempre que a página é recarregada\n\n\n  useEffect(() => {\n    //Formatando valores passados pela URL em Objetos ( ?token= ... ?email= ...)\n    const values = queryString.parse(pathName); //Acessando esses objetos e Setando esses valores para conseguir usar eles na requisição (axios)\n\n    setValues({\n      token: values.token,\n      email: values.email\n    });\n  }, // Importante para não virar um Loop\n  []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(LoginContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        id: \"h2\",\n        className: \"np-subTitle\",\n        children: \"Digite a sua nova senha\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"new-senha\",\n          className: \"password-input-box\",\n          type: \"password\",\n          name: \"password1\",\n          onChange: e => {\n            setSenhaInput(e.target.value);\n          },\n          placeholder: \"Senha\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"new-senha2\",\n          className: \"password-input-box\",\n          type: \"password\",\n          name: \"password2\",\n          onChange: e => {\n            setSenhaInput2(e.target.value);\n          },\n          placeholder: \"Senha\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"link-box\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), enviado ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"forgot-password-button\",\n            className: \"fp-button\",\n            onClick: () => history.push(`/`),\n            children: \"Voltar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this)\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"new-password-button\",\n            className: \"np-button\",\n            name: \"new-password-button\",\n            type: \"submit\",\n            value: \"Enviar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this)\n        }, void 0, false), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: mensagem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewPassword, \"qHMAhFFEDU5P63IStdT/RkK17so=\", false, function () {\n  return [useLocation, useHistory];\n});\n\n_c = NewPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewPassword\");","map":{"version":3,"sources":["/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/pages/newPassword/index.js"],"names":["React","useState","useEffect","useLocation","useHistory","axios","queryString","LoginContainer","NewPassword","pathName","search","senhaInput","setSenhaInput","senhaInput2","setSenhaInput2","values","setValues","token","email","enviado","setEnviado","mensagem","setMensagem","history","NewPasswordPost","data","senha","senha2","post","then","result","message","console","log","onSubmit","e","preventDefault","parse","target","value","push"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../../styles/newPassword.scss';\nimport { useLocation, useHistory } from 'react-router-dom'\nimport axios from \"axios\";\nimport queryString from 'query-string'\n\nimport LoginContainer from '../../components/loginContainer';\n\nexport default function NewPassword() {\n\n  //Acessando os valores da URL ?token=...&email=...\n  const pathName = useLocation().search;\n\n  //Inputs de senha \n  //  ==> ****Realizar verificação no front se ambas as senhas digitadas são iguais antes de enviar.\n  const [senhaInput, setSenhaInput] = useState(\"\");\n  const [senhaInput2, setSenhaInput2] = useState(\"\");\n\n  //Objetos que vão receber os valores fornecidos pela URL\n  const [values, setValues] = useState({\n    token: \"\",\n    email: \"\"\n  })\n\n  //UseState() => Usado para setar o status de envio e realizar alguma alteração em função disso \n  // (mudei o botão de enviar para a mensagem abaixo!)\n  const [enviado, setEnviado] = useState();\n\n  //UseState() => Mensagem que será definida quando a requisição for enviada\n  const [mensagem, setMensagem] = useState(\"\")\n\n  //Instanciando o useHistory para utilização na navegação do site\n  const history = useHistory();\n\n\n  //Função que realiza uma requisição na rota \"/reset-password\" enviando os valores de senha1 e 2, token e email fornecidos pela URL (enviado pelo email)\n  function NewPasswordPost() {\n    //Só envia a requisição se as senhas inseridas estiverem iguais.\n    if (senhaInput !== senhaInput2) {\n      setMensagem(`As senhas inseridas não coincidem!`)\n    }\n    else {\n      const data = { senha: senhaInput, senha2: senhaInput2, token: values.token, email: values.email };\n      axios.post(\"http://localhost:3002/reset-password\", data).then((result) => {\n        setEnviado(true)\n        setMensagem(result.data.message)\n      })\n      console.log(mensagem)\n    }\n  }\n\n  //Função que executa os padrões de required do FORM do html e depois executa a nossa requisição (newPasswordPost)\n  const onSubmit = (e) => {\n    e.preventDefault();\n    NewPasswordPost();\n  }\n\n  //Aquilo que é carregado/executado sempre que a página é recarregada\n  useEffect(() => {\n    //Formatando valores passados pela URL em Objetos ( ?token= ... ?email= ...)\n    const values = queryString.parse(pathName)\n\n    //Acessando esses objetos e Setando esses valores para conseguir usar eles na requisição (axios)\n    setValues({\n      token: values.token,\n      email: values.email\n    })\n  },\n    // Importante para não virar um Loop\n    []);\n\n  return (\n    <div className=\"content\">\n      <LoginContainer />\n      <div className=\"container\">\n        <h2 id=\"h2\" className=\"np-subTitle\">Digite a sua nova senha</h2>\n\n        <form onSubmit={onSubmit}>\n          <input\n            id=\"new-senha\"\n            className=\"password-input-box\"\n            type=\"password\"\n            name=\"password1\"\n            onChange={(e) => {\n              setSenhaInput(e.target.value);\n            }}\n            placeholder=\"Senha\"\n            required\n          />\n          <input\n            id=\"new-senha2\"\n            className=\"password-input-box\"\n            type=\"password\"\n            name=\"password2\"\n            onChange={(e) => {\n              setSenhaInput2(e.target.value);\n            }}\n            placeholder=\"Senha\"\n            required\n          />\n\n          <div className=\"link-box\">\n          </div>\n\n\n          {/* Se o valor de enviado for true, ele muda o botão de enviar para o botão de voltar.\n              * importante: para usar o op. ternario, você deverá ter as mesmas tags no começo e final do operador,\n              por isso foi usado o <> </>. *\n          */}\n          {enviado ?\n            <>\n              <button id=\"forgot-password-button\" className=\"fp-button\" onClick={() => history.push(`/`)}>Voltar</button>\n            </>\n            :\n            <>\n              <input\n                id=\"new-password-button\"\n                className=\"np-button\"\n                name=\"new-password-button\"\n                type=\"submit\"\n                value=\"Enviar\" />\n            </>\n          }\n          {/* Mensagem que será personalizada dependendo do que houver, se for feita ou não uma requisição ou houver algum\n          tipo de erro */}\n          <h4>{mensagem}</h4>\n\n        </form>\n\n      </div>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}