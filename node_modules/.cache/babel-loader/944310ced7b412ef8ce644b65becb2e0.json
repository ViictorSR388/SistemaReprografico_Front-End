{"ast":null,"code":"var _jsxFileName = \"/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route, useHistory } from 'react-router-dom';\nimport login from './pages/login';\nimport notAuthorized from \"./NotAuthorized\";\nimport newUser from './pages/newUser';\nimport newPassword from './pages/newPassword';\nimport forgotPassword from './pages/forgotPassword';\nimport userInfo from './pages/userInfo';\nimport requestFormC from './pages/requestFormC';\nimport requestFormG from './pages/requestFormG';\nimport management from './pages/management';\nimport review from './pages/review';\nimport historyDefault from './pages/historyDefault';\nimport historyAdmin from './pages/historyAdmin';\nimport statistics from './pages/statistics';\nimport myRequests from './pages/myRequests';\nimport detPedido from './pages/detPedido';\nimport { isAuthenticated } from './auth';\nimport axios from \"axios\";\nimport { AuthContext } from \"./helpers/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [authState, setAuthState] = useState({\n    nif: 0,\n    email: \"\",\n    nome: \"\",\n    imagem: \"\",\n    Roles: [],\n    status: false\n  });\n  const [redirect, setRedirect] = useState(false); //Não precisava copiar e colar isso aqui no código todo, tudo o que está dentr\n\n  useEffect(() => {\n    axios.get(\"http://localhost:3002/auth\", {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\")\n      },\n      validateStatus: () => true\n    }).then(response => {\n      if (response.status === 500 || response.data.error) {\n        setAuthState({\n          status: false\n        });\n        setRedirect(true);\n      } else {\n        setAuthState({\n          status: true,\n          nif: response.data.nif,\n          email: response.data.email,\n          nome: response.data.nome,\n          imagem: \"http://localhost:3002/\" + response.data.imagem,\n          roles: response.data.roles\n        });\n        setRedirect(false);\n      }\n    });\n  }, []); // const PrivateRoute = ({ component: Component, ...rest }) => (\n  //   <Route\n  //     {...rest}\n  //     render={props =>\n  //       isAuthenticated() ? (\n  //         <Component {...props} />\n  //       ) : (\n  //         <Redirect to={{ pathname: \"/NotFound\", state: { from: props.location } }} />\n  //       )\n  //     }\n  //   />\n  // );\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      value: {\n        authState,\n        setAuthState\n      },\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            exact: true,\n            component: login\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/forgotPassword\",\n            exact: true,\n            component: forgotPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/newPassword\",\n            exact: true,\n            component: newPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), redirect ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(Route, {\n              path: \"*\",\n              exact: true,\n              component: notAuthorized\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 19\n            }, this)\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/newUser\",\n              exact: true,\n              component: newUser\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/userInfo\",\n              exact: true,\n              component: userInfo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/requestFormC\",\n              exact: true,\n              component: requestFormC\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/requestFormG\",\n              exact: true,\n              component: requestFormG\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/management\",\n              exact: true,\n              component: management\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/review/:id\",\n              exact: true,\n              component: review\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/historyDefault\",\n              exact: true,\n              component: historyDefault\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/historyAdmin\",\n              exact: true,\n              component: historyAdmin\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/statistics\",\n              exact: true,\n              component: statistics\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/notAuthorized\",\n              exact: true,\n              component: notAuthorized\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/myRequests\",\n              exact: true,\n              component: myRequests\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/detPedido/:id\",\n              exact: true,\n              component: detPedido\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"Ut39m0PrbIelFpXn9DvHukozTFg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/lucca/Documents/github/repro/front-end/reprografia_front-end/src/App.js"],"names":["useState","useEffect","BrowserRouter","Router","Switch","Route","useHistory","login","notAuthorized","newUser","newPassword","forgotPassword","userInfo","requestFormC","requestFormG","management","review","historyDefault","historyAdmin","statistics","myRequests","detPedido","isAuthenticated","axios","AuthContext","App","authState","setAuthState","nif","email","nome","imagem","Roles","status","redirect","setRedirect","get","headers","accessToken","localStorage","getItem","validateStatus","then","response","data","error","roles"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route, useHistory } from 'react-router-dom';\nimport login from './pages/login';\nimport notAuthorized from \"./NotAuthorized\";\nimport newUser from './pages/newUser';\nimport newPassword from './pages/newPassword';\nimport forgotPassword from './pages/forgotPassword';\nimport userInfo from './pages/userInfo';\nimport requestFormC from './pages/requestFormC';\nimport requestFormG from './pages/requestFormG';\nimport management from './pages/management';\nimport review from './pages/review';\nimport historyDefault from './pages/historyDefault';\nimport historyAdmin from './pages/historyAdmin';\nimport statistics from './pages/statistics';\nimport myRequests from './pages/myRequests';\nimport detPedido from './pages/detPedido'\nimport { isAuthenticated } from './auth';\nimport axios from \"axios\";\nimport { AuthContext } from \"./helpers/AuthContext\";\n\n\nfunction App() {\n\n  const [authState, setAuthState] = useState({\n    nif: 0,\n    email: \"\",\n    nome: \"\",\n    imagem: \"\",\n    Roles: [],\n    status: false\n  });\n\n  const [redirect, setRedirect] = useState(false)\n \n  //Não precisava copiar e colar isso aqui no código todo, tudo o que está dentr\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:3002/auth\", {\n        headers: {\n          accessToken: localStorage.getItem(\"accessToken\"),\n        },\n        validateStatus: () => true\n      })\n      .then((response) => {\n        if (response.status === 500 || response.data.error) {\n          setAuthState({ status: false });\n          setRedirect(true)\n        }\n        else {\n          setAuthState({\n            status: true,\n            nif: response.data.nif,\n            email: response.data.email,\n            nome: response.data.nome,\n            imagem: \"http://localhost:3002/\" + response.data.imagem,\n            roles: response.data.roles,\n          });\n        setRedirect(false)\n        }\n      })\n  }, []);\n\n  // const PrivateRoute = ({ component: Component, ...rest }) => (\n  //   <Route\n  //     {...rest}\n  //     render={props =>\n  //       isAuthenticated() ? (\n  //         <Component {...props} />\n  //       ) : (\n  //         <Redirect to={{ pathname: \"/NotFound\", state: { from: props.location } }} />\n  //       )\n  //     }\n  //   />\n  // );\n\n\n  return (\n    <>\n      <AuthContext.Provider value={{ authState, setAuthState }}>\n        <Router>\n\n          <Switch>\n            <Route path='/' exact component={login} />\n            <Route path='/forgotPassword' exact component={forgotPassword} />\n            <Route path='/newPassword' exact component={newPassword} />\n            {redirect ? (\n              <>\n                  <Route path='*' exact component={notAuthorized} />\n              </>\n            ) :\n              <>\n                <Route path='/newUser' exact component={newUser} />\n                <Route path='/userInfo' exact component={userInfo} />\n                <Route path='/requestFormC' exact component={requestFormC} />\n                <Route path='/requestFormG' exact component={requestFormG} />\n                <Route path='/management' exact component={management} />\n                <Route path='/review/:id' exact component={review} />\n                <Route path='/historyDefault' exact component={historyDefault} />\n                <Route path='/historyAdmin' exact component={historyAdmin} />\n                <Route path='/statistics' exact component={statistics} />\n                <Route path='/notAuthorized' exact component={notAuthorized} />\n                <Route path='/myRequests' exact component={myRequests} />\n                <Route path='/detPedido/:id' exact component={detPedido} />\n              </>\n            }\n          </Switch>\n        </Router>\n      </AuthContext.Provider>\n    </>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}